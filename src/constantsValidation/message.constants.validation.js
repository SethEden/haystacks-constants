/**
 * @file message.constants.validation.js
 * @module message.constants.validation
 * @description Contains all validation for the system messages.
 * @requires module:message.constants
 * @author Seth Hollingsead
 * @date 2022/03/20
 * @copyright Copyright © 2022-… by Seth Hollingsead. All rights reserved
 */

// Internal imports
import * as msg from '../constants/message.constants.js';

/**
 * @function messageConstantsValidation
 * @description Initializes the message constants validation data objects array.
 * @return {void}
 * @author Seth Hollingsead
 * @date 2022/03/20
 */
export const messageConstantsVaidation = [
  // Logging Constants
  {Name: 'cBEGIN_Space', Actual: msg.cBEGIN_Space, Expected: 'BEGIN '},
  {Name: 'cEND_Space', Actual: msg.cEND_Space, Expected: 'END '},
  {Name: 'cSpaceFunction', Actual: msg.cSpaceFunction, Expected: ' Function'},
  {Name: 'cSpaceEvent', Actual: msg.cSpaceEvent, Expected: ' Event'},
  {Name: 'cBEGIN_Function', Actual: msg.cBEGIN_Function, Expected: 'BEGIN %% Function'},
  {Name: 'cEND_Function', Actual: msg.cEND_Function, Expected: 'END %% Function'},
  {Name: 'cBEGIN_Event', Actual: msg.cBEGIN_Event, Expected: 'BEGIN %% Event'},
  {Name: 'cEND_Event', Actual: msg.cEND_Event, Expected: 'END %% Event'},
  {Name: 'cinputData', Actual: msg.cinputData, Expected: 'inputData'},
  {Name: 'cInputData', Actual: msg.cInputData, Expected: 'InputData'},
  {Name: 'cinputMetaData', Actual: msg.cinputMetaData, Expected: 'inputMetaData'},
  {Name: 'cInputMetaData', Actual: msg.cInputMetaData, Expected: 'InputMetaData'},
  {Name: 'cinputDataIs', Actual: msg.cinputDataIs, Expected: 'inputData is: '},
  {Name: 'cinputsIs', Actual: msg.cinputsIs, Expected: 'inputs is: '},
  {Name: 'cinputMetaDataIs', Actual: msg.cinputMetaDataIs, Expected: 'inputMetaData is: '},
  {Name: 'creturnDataIs', Actual: msg.creturnDataIs, Expected: 'returnData is: '},
  {Name: 'creturnDataTempIs', Actual: msg.creturnDataTempIs, Expected: 'returnDataTemp is: '},

  // System Messages
  {Name: 'cERROR_Colon', Actual: msg.cERROR_Colon, Expected: 'ERROR: '},
  {Name: 'cWARNING_Colon', Actual: msg.cWARNING_Colon, Expected: 'WARNING: '},
  {Name: 'cSUCCESS_Colon', Actual: msg.cSUCCESS_Colon, Expected: 'SUCCESS: '},
  // WARNING: No .env file found! Going to default to the DEVELOPMENT ENVIRONMENT!
  {Name: 'cApplicationWarningMessage1a', Actual: msg.cApplicationWarningMessage1a, Expected: 'WARNING: No .Env File found! '},
  {Name: 'cApplicationWarningMessage1b', Actual: msg.cApplicationWarningMessage1b, Expected: 'Going to default to the DEVELOPMENT ENVIRONMENT!'},
  {Name: 'cCharacterGenerationMessage1', Actual: msg.cCharacterGenerationMessage1, Expected: 'typeToGenerate is: '},
  {Name: 'cCharacterGenerationMessage2', Actual: msg.cCharacterGenerationMessage2, Expected: 'Generate a number.'},
  {Name: 'cCharacterGenerationMessage3', Actual: msg.cCharacterGenerationMessage3, Expected: 'Generate a random upper case or lower case letter.'},
  {Name: 'cCharacterGenerationMessage4', Actual: msg.cCharacterGenerationMessage4, Expected: 'Generate a special character.'},
  {Name: 'cCharacterGenerationMessage5', Actual: msg.cCharacterGenerationMessage5, Expected: 'DEFAULT: Generate a random upper case or lower case letter.'},
  {Name: 'cMathOperationsMessage1', Actual: msg.cMathOperationsMessage1, Expected: 'bigInteger is: '},
  {Name: 'cnumberOfCharactersToGenerateIs', Actual: msg.cnumberOfCharactersToGenerateIs, Expected: 'numberOfCharactersToGenerate is: '},
  {Name: 'cgenerateSpecialCharactersIs', Actual: msg.cgenerateSpecialCharactersIs, Expected: 'generateSpecialCharacters is: '},
  {Name: 'callowableSpecialCharactersIs', Actual: msg.callowableSpecialCharactersIs, Expected: 'allowableSpecialCharacters is: '},
  {Name: 'cspecifiedSuffixAndDomainIs', Actual: msg.cspecifiedSuffixAndDomainIs, Expected: 'specifiedSuffixAndDomain is: '},
  {Name: 'cfailureModeIs', Actual: msg.cfailureModeIs, Expected: 'failureMode is: '},
  {Name: 'cprefixIs', Actual: msg.cprefixIs, Expected: 'prefix is: '},
  {Name: 'csuffixIs', Actual: msg.csuffixIs, Expected: 'suffix is: '},
  {Name: 'cWithoutTheAtSymbol', Actual: msg.cWithoutTheAtSymbol, Expected: 'Without the @ symbol.'},
  {Name: 'cWithoutThePrefix', Actual: msg.cWithoutThePrefix, Expected: 'Without the prefix.'},
  {Name: 'cWithoutTheSuffix', Actual: msg.cWithoutTheSuffix, Expected: 'Without the suffix.'},
  {Name: 'cWithoutTheAtSymbolAndPrefix', Actual: msg.cWithoutTheAtSymbolAndPrefix, Expected: 'Without the @ and prefix.'},
  {Name: 'cDEFAULTWithoutTheAtSymbolAndPrefix', Actual: msg.cDEFAULTWithoutTheAtSymbolAndPrefix, Expected: 'DEFAULT: Without the @ and prefix.'},
  {Name: 'cdomainNameIs', Actual: msg.cdomainNameIs, Expected: 'domainName is: '},
  {Name: 'cnumberOfPrefixCharactersIs', Actual: msg.cnumberOfPrefixCharactersIs, Expected: 'numberOfPrefixCharacters is: '},
  {Name: 'cnumberOfSuffixCharactersIs', Actual: msg.cnumberOfSuffixCharactersIs, Expected: 'numberOfSuffixCharacters is: '},
  {Name: 'cWithoutTheDotSymbol', Actual: msg.cWithoutTheDotSymbol, Expected: 'Without the . symbol.'},
  {Name: 'cWithoutTheAtAndDotSymbols', Actual: msg.cWithoutTheAtAndDotSymbols, Expected: 'Without the @ and . symbols.'},
  {Name: 'cWithoutTheDomainName', Actual: msg.cWithoutTheDomainName, Expected: 'Without the domain name.'},
  {Name: 'cWithoutTheAtSymbolAndDomainName', Actual: msg.cWithoutTheAtSymbolAndDomainName, Expected: 'Without the @ and domain name.'},
  {Name: 'cWithoutTheDotAndDomainName', Actual: msg.cWithoutTheDotAndDomainName, Expected: 'Without the . and domain name.'},
  {Name: 'cWithoutTheAtSymbolDotAndDomainName', Actual: msg.cWithoutTheAtSymbolDotAndDomainName, Expected: 'Without the @, . and domain name.'},
  {Name: 'cWithoutTheDotAndPrefix', Actual: msg.cWithoutTheDotAndPrefix, Expected: 'Without the . and prefix.'},
  {Name: 'cWithoutTheAtSymbolAndSuffix', Actual: msg.cWithoutTheAtSymbolAndSuffix, Expected: 'Without the @ and suffix.'},
  {Name: 'cWithoutTheDotAndSuffix', Actual: msg.cWithoutTheDotAndSuffix, Expected: 'Without the . and suffix.'},
  {Name: 'cWithoutTheAtSymbolDotAndPrefix', Actual: msg.cWithoutTheAtSymbolDotAndPrefix, Expected: 'Without the @, . and prefix.'},
  {Name: 'cWithoutTheAtSymbolDotAndSuffix', Actual: msg.cWithoutTheAtSymbolDotAndSuffix, Expected: 'Without the @, . and suffix.'},
  {Name: 'cWithoutTheAtSymbolDotPrefixAndSuffix', Actual: msg.cWithoutTheAtSymbolDotPrefixAndSuffix, Expected: 'Without the @, ., prefix and suffix.'},
  {Name: 'cWithoutThePrefixAndDomainName', Actual: msg.cWithoutThePrefixAndDomainName, Expected: 'Without the prefix and domain name.'},
  {Name: 'cWithoutTheSuffixAndDomainName', Actual: msg.cWithoutTheSuffixAndDomainName, Expected: 'Without the suffix and domain name.'},
  {Name: 'cWithoutThePrefixAndSuffix', Actual: msg.cWithoutThePrefixAndSuffix, Expected: 'Without the prefix and suffix.'},
  {Name: 'cWithoutThePrefixSuffixAndDomainName', Actual: msg.cWithoutThePrefixSuffixAndDomainName, Expected: 'Without the prefix, suffix and domain name.'},
  {Name: 'cWithoutTheAtSymbolPrefixAndDomainName', Actual: msg.cWithoutTheAtSymbolPrefixAndDomainName, Expected: 'Without the @, prefix and domain name.'},
  {Name: 'cWithoutTheDotPrefixAndDomainName', Actual: msg.cWithoutTheDotPrefixAndDomainName, Expected: 'Without the ., prefix and domain name.'},
  {Name: 'cWithoutTheAtSymbolSuffixAndDomainName', Actual: msg.cWithoutTheAtSymbolSuffixAndDomainName, Expected: 'Without the @, suffix and domain name.'},
  {Name: 'cWithoutTheDotSuffixAndDomainName', Actual: msg.cWithoutTheDotSuffixAndDomainName, Expected: 'Without the ., suffix and domain name.'},
  {Name: 'cWithoutTheAtSymbolPrefixSuffixAndDomainName', Actual: msg.cWithoutTheAtSymbolPrefixSuffixAndDomainName, Expected: 'Without the @, prefix, suffix and domain name.'},
  {Name: 'cWithoutTheDotPrefixSuffixAndDomainName', Actual: msg.cWithoutTheDotPrefixSuffixAndDomainName, Expected: 'Without the ., prefix, suffix and domain name.'},
  {Name: 'cWithoutThePrefixSuffixAndAtSymbol', Actual: msg.cWithoutThePrefixSuffixAndAtSymbol, Expected: 'Without the prefix, suffix and @.'},
  {Name: 'cWithoutThePrefixSuffixAndDot', Actual: msg.cWithoutThePrefixSuffixAndDot, Expected: 'Without the prefix, suffix and ..'},
  {Name: 'cIndexOfTheSpace', Actual: msg.cIndexOfTheSpace, Expected: 'Index of the '},
  {Name: 'cisResolvingAs', Actual: msg.cisResolvingAs, Expected: 'is resolving as: '},
  {Name: 'cparsedStringSpaceTerm', Actual: msg.cparsedStringSpaceTerm, Expected: 'parsedString term'},
  {Name: 'cstring1Is', Actual: msg.cstring1Is, Expected: 'string1 is: '},
  {Name: 'cstring2Is', Actual: msg.cstring2Is, Expected: 'string2 is: '},
  {Name: 'cvariation0ValueIs', Actual: msg.cvariation0ValueIs, Expected: 'variation0 value is: '},
  {Name: 'cvariation1ValueIs', Actual: msg.cvariation1ValueIs, Expected: 'variation1 value is: '},
  {Name: 'ciValueIs', Actual: msg.ciValueIs, Expected: 'i value is: '},
  {Name: 'cjValueIs', Actual: msg.cjValueIs, Expected: 'j value is: '},
  {Name: 'cdeletionCostIs', Actual: msg.cdeletionCostIs, Expected: 'deletionCost is: '},
  {Name: 'cinsertionCostIs', Actual: msg.cinsertionCostIs, Expected: 'insertionCost is: '},
  {Name: 'csubstitutionCostIs', Actual: msg.csubstitutionCostIs, Expected: 'substitutionCost is: '},
  {Name: 'ccamelCaseWordCountIs', Actual: msg.ccamelCaseWordCountIs, Expected: 'camelCaseWordCount is: '},
  {Name: 'ccontainsAcronymIs', Actual: msg.ccontainsAcronymIs, Expected: 'containsAcronym is: '},
  {Name: 'cspacesCountIs', Actual: msg.cspacesCountIs, Expected: 'spacesCount is: '},
  {Name: 'cperiodCountIs', Actual: msg.cperiodCountIs, Expected: 'periodCount is: '},
  {Name: 'cdashCountIs', Actual: msg.cdashCountIs, Expected: 'dashCount is: '},
  {Name: 'cunderscoreCountIs', Actual: msg.cunderscoreCountIs, Expected: 'underscoreCount is: '},
  {Name: 'cplusCountIs', Actual: msg.cplusCountIs, Expected: 'plusCount is: '},
  {Name: 'cpercentCountIs', Actual: msg.cpercentCountIs, Expected: 'percentCount is: '},
  {Name: 'cstringDeltaValueIs', Actual: msg.cstringDeltaValueIs, Expected: 'stringDelta value is: '},
  {Name: 'cFilenamesMatch', Actual: msg.cFilenamesMatch, Expected: 'Filenames match'},
  {Name: 'cFilenamesDoNotMatch', Actual: msg.cFilenamesDoNotMatch, Expected: 'Filenames do not match'},
  {Name: 'cconstantsLineIs', Actual: msg.cconstantsLineIs, Expected: 'constants Line is: '},
  {Name: 'cconstantsLineKeyIs', Actual: msg.cconstantsLineKeyIs, Expected: 'constants LineKey is: '},
  {Name: 'cArrayElementsMatch', Actual: msg.cArrayElementsMatch, Expected: 'Array elements match'},
  {Name: 'cArrayElementsDoNotMatch', Actual: msg.cArrayElementsDoNotMatch, Expected: 'Array elements do not match'},
  {Name: 'clineArray2Is', Actual: msg.clineArray2Is, Expected: 'lineArray[2] is: '},
  {Name: 'cSuggestedLineOfCodeIs', Actual: msg.cSuggestedLineOfCodeIs, Expected: 'Suggested line of code is: '},
  {Name: 'cErrorUnknownConstantFile', Actual: msg.cErrorUnknownConstantFile, Expected: 'ERROR: Unknown constant file.'},
  {Name: 'cconstantsTypesKeysIs', Actual: msg.cconstantsTypesKeysIs, Expected: 'constantsTypesKeys is: '},
  {Name: 'cconstantTypeKeyIs', Actual: msg.cconstantTypeKeyIs, Expected: 'constantTypeKey is: '},
  {Name: 'cconstantTypeValuesIs', Actual: msg.cconstantTypeValuesIs, Expected: 'constantTypeValues is: '},
  {Name: 'cconstantsKeysIs', Actual: msg.cconstantsKeysIs, Expected: 'constantsKeys is: '},
  {Name: 'cconstantKeyIs', Actual: msg.cconstantKeyIs, Expected: 'constantKey is: '},
  {Name: 'cconstantActualValueIs', Actual: msg.cconstantActualValueIs, Expected: 'constantActualValue is: '},
  {Name: 'cconstantNameIs', Actual: msg.cconstantNameIs, Expected: 'constantName is: '},
  {Name: 'cconstantValueIs', Actual: msg.cconstantValueIs, Expected: 'constantValue is: '},
  {Name: 'cdeltaLengthIs', Actual: msg.cdeltaLengthIs, Expected: 'deltaLength is: '},
  {Name: 'crecursiveSubStringIs', Actual: msg.crecursiveSubStringIs, Expected: 'recursiveSubString is: '},
  {Name: 'cmaxStringLengthIs', Actual: msg.cmaxStringLengthIs, Expected: 'maxStringLength is: '},
  {Name: 'cminStringLengthIs', Actual: msg.cminStringLengthIs, Expected: 'minStringLength is: '},
  {Name: 'ccurrentMasterStringArrayElementIs', Actual: msg.ccurrentMasterStringArrayElementIs, Expected: 'currentMasterStringArrayElement is: '},
  {Name: 'ccValueIs', Actual: msg.ccValueIs, Expected: 'c value is: '},
  {Name: 'cbeginningIndexIs', Actual: msg.cbeginningIndexIs, Expected: 'beginningIndex is: '},
  {Name: 'cendingIndexIs', Actual: msg.cendingIndexIs, Expected: 'endingIndex is: '},
  {Name: 'cstringToCompareIs', Actual: msg.cstringToCompareIs, Expected: 'stringToCompare is: '},
  {Name: 'cdValueIs', Actual: msg.cdValueIs, Expected: 'd value is: '},
  {Name: 'cdNotEqualA', Actual: msg.cdNotEqualA, Expected: 'd != a'},
  {Name: 'cotherStringToCompareIs', Actual: msg.cotherStringToCompareIs, Expected: 'otherStringToCompare is: '},
  {Name: 'cFoundAMatch', Actual: msg.cFoundAMatch, Expected: 'FOUND A MATCH!!!!'},
  {Name: 'cConstantDoesNotExist', Actual: msg.cConstantDoesNotExist, Expected: 'Constant does NOT exist: '},
  {Name: 'cConstantDoesExist', Actual: msg.cConstantDoesExist, Expected: 'Constant does exist: '},
  {Name: 'cBEGIN_ithLoop', Actual: msg.cBEGIN_ithLoop, Expected: 'BEGIN i-th loop: '},
  {Name: 'cBEGIN_ithIteration', Actual: msg.cBEGIN_ithIteration, Expected: 'BEGIN i-th iteration: '},
  {Name: 'cBEGIN_jthLoop', Actual: msg.cBEGIN_jthLoop, Expected: 'BEGIN j-th loop: '},
  {Name: 'cBEGIN_kthIteration', Actual: msg.cBEGIN_kthIteration, Expected: 'BEGIN k-th iteration: '},
  {Name: 'cEND_ithLoop', Actual: msg.cEND_ithLoop, Expected: 'END i-th loop: '},
  {Name: 'cEND_ithIteration', Actual: msg.cEND_ithIteration, Expected: 'END i-th iteration: '},
  {Name: 'cEND_jthLoop', Actual: msg.cEND_jthLoop, Expected: 'END j-th loop: '},
  {Name: 'cEND_kthIteration', Actual: msg.cEND_kthIteration, Expected: 'END k-th iteration: '},
  {Name: 'ccurrentCommandIs', Actual: msg.ccurrentCommandIs, Expected: 'currentCommand is: '},
  {Name: 'caliasListIs', Actual: msg.caliasListIs, Expected: 'aliasList is: '},
  {Name: 'ccurrentAliasIs', Actual: msg.ccurrentAliasIs, Expected: 'currentAlias is: '},
  {Name: 'cduplicateAliasCountIs', Actual: msg.cduplicateAliasCountIs, Expected: 'duplicateAliasCount is: '},
  {Name: 'cduplicateCommandAliasIs', Actual: msg.cduplicateCommandAliasIs, Expected: 'duplicate command alias is: '},
  {Name: 'ccommandWordAliasesBeforeChangeIs', Actual: msg.ccommandWordAliasesBeforeChangeIs, Expected: 'commandWordAliases BEFORE CHANGE is: '},
  {Name: 'ccommandWordAliasesAfterChangeIs', Actual: msg.ccommandWordAliasesAfterChangeIs, Expected: 'commandWordAliasesArray AFTER CHANGE is: '},
  {Name: 'cmasterCommandWordAlisesArrayIs', Actual: msg.cmasterCommandWordAlisesArrayIs, Expected: 'masterCommandWordAliasesArray is: '},
  {Name: 'cmasterArrayIndexIs', Actual: msg.cmasterArrayIndexIs, Expected: 'masterArrayIndex is: '},
  {Name: 'cCommandAliasesAre', Actual: msg.cCommandAliasesAre, Expected: 'Command Aliases are: '},
  {Name: 'cexpandedArrayIs', Actual: msg.cexpandedArrayIs, Expected: 'expandedArray is: '},
  {Name: 'cexpandedLehmerCodeArrayIs', Actual: msg.cexpandedLehmerCodeArrayIs, Expected: 'expandedLehmerCodeArray is: '},
  {Name: 'cindexOfExpansionIs', Actual: msg.cindexOfExpansionIs, Expected: 'indexOfExpansion is: '},
  {Name: 'carrayToBeExpandedIs', Actual: msg.carrayToBeExpandedIs, Expected: 'arrayToBeExpanded is: '},
  {Name: 'climitOfExpansionIs', Actual: msg.climitOfExpansionIs, Expected: 'limitOfExpansion is: '},
  {Name: 'cpushingLehmerCodeArray1ToReturnDataValue', Actual: msg.cpushingLehmerCodeArray1ToReturnDataValue, Expected: 'pushing LehmerCodeArray1 to returnData value: '},
  {Name: 'creturnDataAfterPushIs', Actual: msg.creturnDataAfterPushIs, Expected: 'returnData after push is: '},
  {Name: 'creturnDataAfterLevel1Is', Actual: msg.creturnDataAfterLevel1Is, Expected: 'returnData after level 1 is: '},
  {Name: 'carrayToBeExpandedDotLengthIs', Actual: msg.carrayToBeExpandedDotLengthIs, Expected: 'arrayToBeExpanded.length is: '},
  {Name: 'creturnDataDotLengthIs', Actual: msg.creturnDataDotLengthIs, Expected: 'returnData.length is: '},
  {Name: 'creturnDataBeforePopIs', Actual: msg.creturnDataBeforePopIs, Expected: 'returnData BEFORE POP is: '},
  {Name: 'creturnDataAfterPopIs', Actual: msg.creturnDataAfterPopIs, Expected: 'returnData AFTER POP is: '},
  {Name: 'cmasterTempReturnDataBeforeRecursiveCallIs', Actual: msg.cmasterTempReturnDataBeforeRecursiveCallIs, Expected: 'masterTempReturnData BEFORE recursive call is: '},
  {Name: 'ctempReturnData1Is', Actual: msg.ctempReturnData1Is, Expected: 'tempReturnData1 is: '},
  {Name: 'ctempReturnData2Is', Actual: msg.ctempReturnData2Is, Expected: 'tempReturnData2 is: '},
  {Name: 'ctempReturnData1DotLengthIs', Actual: msg.ctempReturnData1DotLengthIs, Expected: 'tempReturnData1.length is: '},
  {Name: 'cpushingTempReturnData1Kvalue', Actual: msg.cpushingTempReturnData1Kvalue, Expected: 'pushing tempReturnData1[k] value: '},
  {Name: 'cmasterTempReturnDataAfterRecursiveCallIs', Actual: msg.cmasterTempReturnDataAfterRecursiveCallIs, Expected: 'masterTempReturnData AFTER recursive call is: '},
  {Name: 'clookupIndexIs', Actual: msg.clookupIndexIs, Expected: 'lookupIndex is: '},
  {Name: 'clookupValueIs', Actual: msg.clookupValueIs, Expected: 'lookupValue is: '},
  {Name: 'cDataCategoryShouldBe', Actual: msg.cDataCategoryShouldBe, Expected: 'Data Category should be: '},
  {Name: 'cDataCategoryDetailNameShouldBe', Actual: msg.cDataCategoryDetailNameShouldBe, Expected: 'Data Category Detail Name should be: '},
  {Name: 'cKeywordNameShouldBe', Actual: msg.cKeywordNameShouldBe, Expected: 'Keyword Name should be: '},
  {Name: 'cpathElementIs', Actual: msg.cpathElementIs, Expected: 'pathElement is: '},
  {Name: 'ccaseIEqual0', Actual: msg.ccaseIEqual0, Expected: 'case: i = 0'},
  {Name: 'ccasePathElementEqual', Actual: msg.ccasePathElementEqual, Expected: 'case: pathElement = '},
  {Name: 'ccaseElse', Actual: msg.ccaseElse, Expected: 'case else'},
  {Name: 'creturnDataSoFarIs', Actual: msg.creturnDataSoFarIs, Expected: 'returnData so far is: '},
  {Name: 'cpathArrayIs', Actual: msg.cpathArrayIs, Expected: 'pathArray is: '},
  {Name: 'ccurrentPathElementIs', Actual: msg.ccurrentPathElementIs, Expected: 'current path element is: '},
  {Name: 'cAttemptingToLoadXmlData', Actual: msg.cAttemptingToLoadXmlData, Expected: 'Attempting to load XML data!'},
  {Name: 'cAttemptingToLoadCsvData', Actual: msg.cAttemptingToLoadCsvData, Expected: 'Attempting to load CSV data!'},
  {Name: 'cAttemptingToLoadJsonData', Actual: msg.cAttemptingToLoadJsonData, Expected: 'Attempting to load JSON data!'},
  {Name: 'cLoadedDataIs', Actual: msg.cLoadedDataIs, Expected: 'Loaded data is: '},
  {Name: 'cattributeArrayIs', Actual: msg.cattributeArrayIs, Expected: 'attributeArray is: '},
  {Name: 'cattributeArray0Is', Actual: msg.cattributeArray0Is, Expected: 'attributeArray[0] is: '},
  {Name: 'cattributeArray1Is', Actual: msg.cattributeArray1Is, Expected: 'attributeArray[1] is: '},
  {Name: 'carrayIs', Actual: msg.carrayIs, Expected: 'array is: '},
  {Name: 'cvalueIs', Actual: msg.cvalueIs, Expected: 'value is: '},
  {Name: 'cmyFunctionIs', Actual: msg.cmyFunctionIs, Expected: 'myFunction is: '},
  {Name: 'carrayInputObjectIsNotAnArray', Actual: msg.carrayInputObjectIsNotAnArray, Expected: 'array input object is not an array.'},
  {Name: 'cTheValueWasFoundInTheArray', Actual: msg.cTheValueWasFoundInTheArray, Expected: 'The value was found in the array.'},
  {Name: 'cTheValueWasNotFoundInTheArray', Actual: msg.cTheValueWasNotFoundInTheArray, Expected: 'The value was NOT found in the array.'},
  {Name: 'coriginalStringIs', Actual: msg.coriginalStringIs, Expected: 'originalString is: '},
  {Name: 'cindexIs', Actual: msg.cindexIs, Expected: 'index is: '},
  {Name: 'creplacementIs', Actual: msg.creplacementIs, Expected: 'replacement is: '},
  {Name: 'cDEPLOY_APPLICATION', Actual: msg.cDEPLOY_APPLICATION, Expected: 'DEPLOY_APPLICATION'},
  {Name: 'cRELEASE_APPLICATION', Actual: msg.cRELEASE_APPLICATION, Expected: 'RELEASE_APPLICATION'},
  {Name: 'cReleaseFailed', Actual: msg.cReleaseFailed, Expected: 'Release failed'},
  {Name: 'caggregateCommandStringIs', Actual: msg.caggregateCommandStringIs, Expected: 'aggregateCommandString is: '},
  {Name: 'cmetaDataParametersIs', Actual: msg.cmetaDataParametersIs, Expected: 'metaDataParameters is: '},
  {Name: 'cmetaDataParametersLengthIs', Actual: msg.cmetaDataParametersLengthIs, Expected: 'metaDataParameters length is: '},
  {Name: 'cmetaDataPathAndFilenameIs', Actual: msg.cmetaDataPathAndFilenameIs, Expected: 'metaDataPathAndFilename is: '},
  {Name: 'cpathAndFilenameIs', Actual: msg.cpathAndFilenameIs, Expected: 'pathAndFilename is: '},
  {Name: 'ccontentsAre', Actual: msg.ccontentsAre, Expected: 'contents are: '},
  {Name: 'ccontentsOfDare', Actual: msg.ccontentsOfDare, Expected: 'contents of D are: '},
  {Name: 'cBEGIN_theIthIterationOfInputDataArray', Actual: msg.cBEGIN_theIthIterationOfInputDataArray, Expected: 'BEGIN the i-th iteration of the inputData array. i is: '},
  {Name: 'ccurrentRuleIs', Actual: msg.ccurrentRuleIs, Expected: 'currentRule is: '},
  {Name: 'crulesIs', Actual: msg.crulesIs, Expected: 'rules is: '},
  {Name: 'cruleInputDataIs', Actual: msg.cruleInputDataIs, Expected: 'ruleInputData is: '},
  {Name: 'cruleInputMetaData', Actual: msg.cruleInputMetaData, Expected: 'ruleInputMetaData is: '},
  {Name: 'cBusinessRuleStartTimeIs', Actual: msg.cBusinessRuleStartTimeIs, Expected: 'Business Rule Start time is: '},
  {Name: 'cBusinessRuleEndTimeIs', Actual: msg.cBusinessRuleEndTimeIs, Expected: 'Business Rule End time is: '},
  {Name: 'cBusinessRuleRunTimeIs', Actual: msg.cBusinessRuleRunTimeIs, Expected: 'BusinessRule run-time is: '},
  {Name: 'ccommandStringBeforeAttemptedDelimiterSwapIs', Actual: msg.ccommandStringBeforeAttemptedDelimiterSwapIs, Expected: 'commandString before attempted delimiter swap is: '},
  {Name: 'creplaceCharacterWithCharacterRuleIs', Actual: msg.creplaceCharacterWithCharacterRuleIs, Expected: 'replaceCharacterWithCharacterRule is: '},
  {Name: 'cRuleOutputIs', Actual: msg.cRuleOutputIs, Expected: 'Rule output is: '},
  {Name: 'ccamelCaseCommandNameArrayIs', Actual: msg.ccamelCaseCommandNameArrayIs, Expected: 'camelCaseCommandNameArray is: '},
  {Name: 'ccurrentCommandWordIs', Actual: msg.ccurrentCommandWordIs, Expected: 'current commandWord is: '},
  {Name: 'cPARSER_ERROR', Actual: msg.cPARSER_ERROR, Expected: 'PARSER ERROR: '},
  {Name: 'ccommandAliasDataStructureIs', Actual: msg.ccommandAliasDataStructureIs, Expected: 'commandAliasDataStructure is: '},
  {Name: 'cuserDefinedConstantIs', Actual: msg.cuserDefinedConstantIs, Expected: 'userDefinedConstant is: '},
  {Name: 'cwordCountIs', Actual: msg.cwordCountIs, Expected: 'wordCount is: '},
  {Name: 'cwordsArrayIs', Actual: msg.cwordsArrayIs, Expected: 'wordsArray is: '},
  {Name: 'cOptimizedConstantDefinitionForWord', Actual: msg.cOptimizedConstantDefinitionForWord, Expected: 'Optimized constant definition for word: '},
  {Name: 'cuserDefinedConstantListIs', Actual: msg.cuserDefinedConstantListIs, Expected: 'userDefinedConstantList is: '},
  {Name: 'cuserDefinedConstantListContainsComas', Actual: msg.cuserDefinedConstantListContainsComas, Expected: 'userDefinedConstantList contains comas'},
  {Name: 'cuserDefinedConstantsListArrayIs', Actual: msg.cuserDefinedConstantsListArrayIs, Expected: 'userDefinedConstantsListArray is: '},
  {Name: 'cuserDefinedConstantsListDoesNotContainComas', Actual: msg.cuserDefinedConstantsListDoesNotContainComas, Expected: 'userDefinedConstantList DOES NOT contain comas'},
  {Name: 'ccommonPatternsArrayIs', Actual: msg.ccommonPatternsArrayIs, Expected: 'commonPatternsArray is: '},
  {Name: 'cbusinessRuleCounterIs', Actual: msg.cbusinessRuleCounterIs, Expected: 'businessRuleCounter is: '},
  {Name: 'cbusinessRulePerformanceSumIs', Actual: msg.cbusinessRulePerformanceSumIs, Expected: 'businessRulePerformanceSum is: '},
  {Name: 'cDoneBusinessRulePerformanceSumIs', Actual: msg.cDoneBusinessRulePerformanceSumIs, Expected: 'DONE! businessRulePerformanceSum is: '},
  {Name: 'caverageIs', Actual: msg.caverageIs, Expected: 'average is: '},
  {Name: 'cbusinessRulePerformanceStdSumIs', Actual: msg.cbusinessRulePerformanceStdSumIs, Expected: 'businessRulePerformanceStdSum is: '},
  {Name: 'cDoneBusinessRulePerformanceStdSumIs', Actual: msg.cDoneBusinessRulePerformanceStdSumIs, Expected: 'DONE! businessRulePerformanceStdSum is: '},
  {Name: 'cstandardDevIs', Actual: msg.cstandardDevIs, Expected: 'standardDev is: '},
  {Name: 'ccommandCounterIs', Actual: msg.ccommandCounterIs, Expected: 'commandCounter is: '},
  {Name: 'ccommandPerformanceSumIs', Actual: msg.ccommandPerformanceSumIs, Expected: 'commandPerformanceSum is: '},
  {Name: 'cDoneCommandPerformanceSumIs', Actual: msg.cDoneCommandPerformanceSumIs, Expected: 'DONE! commandPerformanceSum is: '},
  {Name: 'ccommandPerformanceStdSumIs', Actual: msg.ccommandPerformanceStdSumIs, Expected: 'commandPerformanceStdSum is: '},
  {Name: 'cDoneCommandPerformanceStdSumIs', Actual: msg.cDoneCommandPerformanceStdSumIs, Expected: 'DONE! commandPerformanceStdSum is: '},
  {Name: 'ccolorKeysIs', Actual: msg.ccolorKeysIs, Expected: 'colorKeys is: '},
  {Name: 'ccurrentColorNameIs', Actual: msg.ccurrentColorNameIs, Expected: 'currentColorName is: '},
  {Name: 'ccurrentColorObjectIs', Actual: msg.ccurrentColorObjectIs, Expected: 'currentColorObject is: '},
  {Name: 'ccurrentColorHexValueIs', Actual: msg.ccurrentColorHexValueIs, Expected: 'currentColorHexValue is: '},
  {Name: 'cruleOutputIs', Actual: msg.cruleOutputIs, Expected: 'ruleOutput is: '},
  {Name: 'cBeginPhase1ConstantsValidation', Actual: msg.cBeginPhase1ConstantsValidation, Expected: 'BEGIN Phase 1 Constants Validation'},
  {Name: 'cEndPhase1ConstantsValidation', Actual: msg.cEndPhase1ConstantsValidation, Expected: 'END Phase 1 Constants Validation'},
  {Name: 'cBeginPhase2ConstantsValidation', Actual: msg.cBeginPhase2ConstantsValidation, Expected: 'BEGIN Phase 2 Constants Validation'},
  {Name: 'cEndPhase2ConstantsValidation', Actual: msg.cEndPhase2ConstantsValidation, Expected: 'END Phase 2 Constants Validation'},
  {Name: 'cconstantsPathIs', Actual: msg.cconstantsPathIs, Expected: 'constantsPath is: '},
  {Name: 'cresolvedConstantsPath_BasicIs', Actual: msg.cresolvedConstantsPath_BasicIs, Expected: 'resolvedConstantsPath_Basic is: '},
  {Name: 'cresolvedConstantsPath_BusinessIs', Actual: msg.cresolvedConstantsPath_BusinessIs, Expected: 'resolvedConstantsPath_Business is: '},
  {Name: 'cresolvedConstantsPath_ColorIs', Actual: msg.cresolvedConstantsPath_ColorIs, Expected: 'resolvedConstantsPath_Color is: '},
  {Name: 'cresolvedConstantsPath_CommandIs', Actual: msg.cresolvedConstantsPath_CommandIs, Expected: 'resolvedConstantsPath_Command is: '},
  {Name: 'cresolvedConstantsPath_ConfigurationIs', Actual: msg.cresolvedConstantsPath_ConfigurationIs, Expected: 'resolvedConstantsPath_Configuration is: '},
  {Name: 'cresolvedConstantsPath_CountryIs', Actual: msg.cresolvedConstantsPath_CountryIs, Expected: 'resolvedConstantsPath_Country is: '},
  {Name: 'cresolvedConstantsPath_ElementIs', Actual: msg.cresolvedConstantsPath_ElementIs, Expected: 'resolvedConstantsPath_Element is: '},
  {Name: 'cresolvedConstantsPath_FunctionIs', Actual: msg.cresolvedConstantsPath_FunctionIs, Expected: 'resolvedConstantsPath_Function is: '},
  {Name: 'cresolvedConstantsPath_GenericIs', Actual: msg.cresolvedConstantsPath_GenericIs, Expected: 'resolvedConstantsPath_Generic is: '},
  {Name: 'cresolvedConstantsPath_IsotopeIs', Actual: msg.cresolvedConstantsPath_IsotopeIs, Expected: 'resolvedConstantsPath_Isotope is: '},
  {Name: 'cresolvedConstantsPath_KnotIs', Actual: msg.cresolvedConstantsPath_KnotIs, Expected: 'resolvedConstantsPath_Knot is: '},
  {Name: 'cresolvedConstantsPath_LanguageIs', Actual: msg.cresolvedConstantsPath_LanguageIs, Expected: 'resolvedConstantsPath_Language is: '},
  {Name: 'cresolvedConstantsPath_MessageIs', Actual: msg.cresolvedConstantsPath_MessageIs, Expected: 'resolvedConstantsPath_Message is: '},
  {Name: 'cresolvedConstantsPath_NumericIs', Actual: msg.cresolvedConstantsPath_NumericIs, Expected: 'resolvedConstantsPath_Numeric is: '},
  {Name: 'cresolvedConstantsPath_PhonicIs', Actual: msg.cresolvedConstantsPath_PhonicIs, Expected: 'resolvedConstantsPath_Phonic is: '},
  {Name: 'cresolvedConstantsPath_ShapeIs', Actual: msg.cresolvedConstantsPath_ShapeIs, Expected: 'resolvedConstantsPath_Shape is: '},
  {Name: 'cresolvedConstantsPath_SystemIs', Actual: msg.cresolvedConstantsPath_SystemIs, Expected: 'resolvedConstantsPath_System is: '},
  {Name: 'cresolvedConstantsPath_UnitIs', Actual: msg.cresolvedConstantsPath_UnitIs, Expected: 'resolvedConstantsPath_Unit is: '},
  {Name: 'cresolvedConstantsPath_WordIs', Actual: msg.cresolvedConstantsPath_WordIs, Expected: 'resolvedConstantsPath_Word is: '},
  {Name: 'cBasicConstantsPhase1Validation', Actual: msg.cBasicConstantsPhase1Validation, Expected: 'Basic Constants Phase 1 Validation'},
  {Name: 'cBusinessConstantsPhase1Validation', Actual: msg.cBusinessConstantsPhase1Validation, Expected: 'Business Constants Phase 1 Validation'},
  {Name: 'cColorConstantsPhase1Validation', Actual: msg.cColorConstantsPhase1Validation, Expected: 'Color Constants Phase 1 Validation'},
  {Name: 'cCommandConstantsPhase1Validation', Actual: msg.cCommandConstantsPhase1Validation, Expected: 'Command Constants Phase 1 Validation'},
  {Name: 'cConfigurationConstantsPhase1Validation', Actual: msg.cConfigurationConstantsPhase1Validation, Expected: 'Configuration Constants Phase 1 Validation'},
  {Name: 'cCountryConstantsPhase1Validation', Actual: msg.cCountryConstantsPhase1Validation, Expected: 'Country Constants Phase 1 Validation'},
  {Name: 'cElementConstantsPhase1Validation', Actual: msg.cElementConstantsPhase1Validation, Expected: 'Element Constants Phase 1 Validation'},
  {Name: 'cFunctionConstantsPhase1Validation', Actual: msg.cFunctionConstantsPhase1Validation, Expected: 'Function Constants Phase 1 Validation'},
  {Name: 'cGenericConstantsPhase1Validation', Actual: msg.cGenericConstantsPhase1Validation, Expected: 'Generic Constants Phase 1 Validation'},
  {Name: 'cIsotopeConstantsPhase1Validation', Actual: msg.cIsotopeConstantsPhase1Validation, Expected: 'Isotope Constants Phase 1 Validation'},
  {Name: 'cKnotConstantsPhase1Validation', Actual: msg.cKnotConstantsPhase1Validation, Expected: 'Knot Constants Phase 1 Validation'},
  {Name: 'cLanguageConstantsPhase1Validation', Actual: msg.cLanguageConstantsPhase1Validation, Expected: 'Language Constants Phase 1 Validation'},
  {Name: 'cMessageConstantsPhase1Validation', Actual: msg.cMessageConstantsPhase1Validation, Expected: 'Message Constants Phase 1 Validation'},
  {Name: 'cNumericConstantsPhase1Validation', Actual: msg.cNumericConstantsPhase1Validation, Expected: 'Numeric Constants Phase 1 Validation'},
  {Name: 'cPhonicConstantsPhase1Validation', Actual: msg.cPhonicConstantsPhase1Validation, Expected: 'Phonic Constants Phase 1 Validation'},
  {Name: 'cShapeConstantsPhase1Validation', Actual: msg.cShapeConstantsPhase1Validation, Expected: 'Shape Constants Phase 1 Validation'},
  {Name: 'cSystemConstantsPhase1Validation', Actual: msg.cSystemConstantsPhase1Validation, Expected: 'System Constants Phase 1 Validation'},
  {Name: 'cUnitConstantsPhase1Validation', Actual: msg.cUnitConstantsPhase1Validation, Expected: 'Unit Constants Phase 1 Validation'},
  {Name: 'cWordConstantsPhase1Validation', Actual: msg.cWordConstantsPhase1Validation, Expected: 'Word Constants Phase 1 Validation'},
  {Name: 'cBasicConstantsPhase2Validation', Actual: msg.cBasicConstantsPhase2Validation, Expected: 'Basic Constants Phase 2 Validation'},
  {Name: 'cBusinessConstantsPhase2Validation', Actual: msg.cBusinessConstantsPhase2Validation, Expected: 'Business Constants Phase 2 Validation'},
  {Name: 'cColorConstantsPhase2Validation', Actual: msg.cColorConstantsPhase2Validation, Expected: 'Color Constants Phase 2 Validation'},
  {Name: 'cCommandConstantsPhase2Validation', Actual: msg.cCommandConstantsPhase2Validation, Expected: 'Command Constants Phase 2 Validation'},
  {Name: 'cConfigurationConstantsPhase2Validation', Actual: msg.cConfigurationConstantsPhase2Validation, Expected: 'Configuration Constants Phase 2 Validation'},
  {Name: 'cCountryConstantsPhase2Validation', Actual: msg.cCountryConstantsPhase2Validation, Expected: 'Country Constants Phase 2 Validation'},
  {Name: 'cElementConstantsPhase2Validation', Actual: msg.cElementConstantsPhase2Validation, Expected: 'Element Constants Phase 2 Validation'},
  {Name: 'cFunctionConstantsPhase2Validation', Actual: msg.cFunctionConstantsPhase2Validation, Expected: 'Function Constants Phase 2 Validation'},
  {Name: 'cGenericConstantsPhase2Validation', Actual: msg.cGenericConstantsPhase2Validation, Expected: 'Generic Constants Phase 2 Validation'},
  {Name: 'cIsotopeConstantsPhase2Validation', Actual: msg.cIsotopeConstantsPhase2Validation, Expected: 'Isotope Constants Phase 2 Validation'},
  {Name: 'cKnotConstantsPhase2Validation', Actual: msg.cKnotConstantsPhase2Validation, Expected: 'Knot Constants Phase 2 Validation'},
  {Name: 'cLanguageConstantsPhase2Validation', Actual: msg.cLanguageConstantsPhase2Validation, Expected: 'Language Constants Phase 2 Validation'},
  {Name: 'cMessageConstantsPhase2Validation', Actual: msg.cMessageConstantsPhase2Validation, Expected: 'Message Constants Phase 2 Validation'},
  {Name: 'cNumericConstantsPhase2Validation', Actual: msg.cNumericConstantsPhase2Validation, Expected: 'Numeric Constants Phase 2 Validation'},
  {Name: 'cPhonicConstantsPhase2Validation', Actual: msg.cPhonicConstantsPhase2Validation, Expected: 'Phonic Constants Phase 2 Validation'},
  {Name: 'cShapeConstantsPhase2Validation', Actual: msg.cShapeConstantsPhase2Validation, Expected: 'Shape Constants Phase 2 Validation'},
  {Name: 'cSystemConstantsPhase2Validation', Actual: msg.cSystemConstantsPhase2Validation, Expected: 'System Constants Phase 2 Validation'},
  {Name: 'cUnitConstantsPhase2Validation', Actual: msg.cUnitConstantsPhase2Validation, Expected: 'Unit Constants Phase 2 Validation'},
  {Name: 'cWordConstantsPhase2Validation', Actual: msg.cWordConstantsPhase2Validation, Expected: 'Word Constants Phase 2 Validation'},
  {Name: 'ccommandStringIs', Actual: msg.ccommandStringIs, Expected: 'commandString is: '},
  {Name: 'ccommandDelimiterIs', Actual: msg.ccommandDelimiterIs, Expected: 'commandDelimiter is: '},
  {Name: 'ccommandToExecuteBeforeTheAliasIs', Actual: msg.ccommandToExecuteBeforeTheAliasIs, Expected: 'commandToExecute before the Alias is: '},
  {Name: 'ccommandToExecuteAfterTheAliasIs', Actual: msg.ccommandToExecuteAfterTheAliasIs, Expected: 'commandToExecute after the Alias is: '},
  {Name: 'cWarningTheSpecifiedCommand', Actual: msg.cWarningTheSpecifiedCommand, Expected: 'WARNING: The specified command: '},
  {Name: 'cdoesNotExistPleaseTryAgain', Actual: msg.cdoesNotExistPleaseTryAgain, Expected: ' does not exist, please try again!'},
  {Name: 'ccommandStringContainsEitherSingleQuoteOrBackTickQuote', Actual: msg.ccommandStringContainsEitherSingleQuoteOrBackTickQuote, Expected: 'commandString contains either a singleQuote or a backTickQuote'},
  {Name: 'ccommandStringContainsSingleQuote', Actual: msg.ccommandStringContainsSingleQuote, Expected: 'commandString contains a singleQuote!'},
  {Name: 'cnumberOfSingleQuotesIsEven', Actual: msg.cnumberOfSingleQuotesIsEven, Expected: 'numberOfSingleQuotes is >= 2 & the numberOfSingleQuotes is EVEN! YAY!'},
  {Name: 'cFirstIndexIs', Actual: msg.cFirstIndexIs, Expected: 'First index is: '},
  {Name: 'ccommandStringAfterTaggingTheFirstStringDelimiter', Actual: msg.ccommandStringAfterTaggingTheFirstStringDelimiter, Expected: 'commandString after tagging the first string delimiter: '},
  {Name: 'cAdditionalIndexIs', Actual: msg.cAdditionalIndexIs, Expected: 'Additional index is: '},
  {Name: 'coddIndex', Actual: msg.coddIndex, Expected: 'odd index'},
  {Name: 'cevenIndex', Actual: msg.cevenIndex, Expected: 'even index'},
  {Name: 'ccommandStringAfterTaggingAnOddStringDelimiter', Actual: msg.ccommandStringAfterTaggingAnOddStringDelimiter, Expected: 'commandString after tagging an odd string delimiter: '},
  {Name: 'ccommandStringAfterTaggingAnEvenStringDelimiter', Actual: msg.ccommandStringAfterTaggingAnEvenStringDelimiter, Expected: 'commandString after tagging an even string delimiter: '},
  {Name: 'cpreSplitCommandStringIs', Actual: msg.cpreSplitCommandStringIs, Expected: 'preSplitCommandString is: '},
  {Name: 'cpostSplitCommandStringIs', Actual: msg.cpostSplitCommandStringIs, Expected: 'postSplitCommandString[k] is: '},
  {Name: 'cpreSplitCommandStringElementIs', Actual: msg.cpreSplitCommandStringElementIs, Expected: 'preSplitCommandStringElement is: '},
  {Name: 'cDoingStraightSplitCommandString', Actual: msg.cDoingStraightSplitCommandString, Expected: 'Doing a straight split of the commandString: '},
  {Name: 'cCommandStartTimeIs', Actual: msg.cCommandStartTimeIs, Expected: 'Command Start time is: '},
  {Name: 'cCommandEndTimeIs', Actual: msg.cCommandEndTimeIs, Expected: 'Command End time is: '},
  {Name: 'cCommandRunTimeIs', Actual: msg.cCommandRunTimeIs, Expected: 'Command run-time is: '},
  {Name: 'ccommandAliasesFilePathConfigurationNameIs', Actual: msg.ccommandAliasesFilePathConfigurationNameIs, Expected: 'commandAliasesFilePathConfigurationName is: '},
  {Name: 'ccommandIs', Actual: msg.ccommandIs, Expected: 'command is: '},
  {Name: 'ccommandToExecuteIs', Actual: msg.ccommandToExecuteIs, Expected: 'commandToExecute is: '},
  {Name: 'ccommandArgsIs', Actual: msg.ccommandArgsIs, Expected: 'commandArgs is: '},
  {Name: 'celseClauseLookingForCommandAliases', Actual: msg.celseClauseLookingForCommandAliases, Expected: 'else-clause looking for command aliases.'},
  {Name: 'callCommandAliasesIs', Actual: msg.callCommandAliasesIs, Expected: 'allCommandAliases is: '},
  {Name: 'ccontextNameIs', Actual: msg.ccontextNameIs, Expected: 'contextName is: '},
  {Name: 'callXmlDataIs', Actual: msg.callXmlDataIs, Expected: 'allXmlData is: '},
  {Name: 'cdataPathConfigurationNameIs', Actual: msg.cdataPathConfigurationNameIs, Expected: 'dataPathConfigurationName is: '},
  {Name: 'cdataPathIs', Actual: msg.cdataPathIs, Expected: 'dataPath is: '},
  {Name: 'cfilesFoundIs', Actual: msg.cfilesFoundIs, Expected: 'filesFound is: '},
  {Name: 'cfileToLoadIs', Actual: msg.cfileToLoadIs, Expected: 'fileToLoad is: '},
  {Name: 'cfilesToLoadIs', Actual: msg.cfilesToLoadIs, Expected: 'filesToLoad is: '},
  {Name: 'cdataFileToMergeIs', Actual: msg.cdataFileToMergeIs, Expected: 'dataFile to merge is: '},
  {Name: 'cparsedDataFileIs', Actual: msg.cparsedDataFileIs, Expected: 'parsedDataFile is: '},
  {Name: 'cexecuteBusinessRules', Actual: msg.cexecuteBusinessRules, Expected: 'execute business rules: '},
  {Name: 'cdataFileIs', Actual: msg.cdataFileIs, Expected: 'dataFile is: '},
  {Name: 'cmergedDataIs', Actual: msg.cmergedDataIs, Expected: 'mergedData is: '},
  {Name: 'cdebugConfigurationSettingValueIs', Actual: msg.cdebugConfigurationSettingValueIs, Expected: 'debugConfigurationSettingValue is: '},
  {Name: 'cclientRootPathIs', Actual: msg.cclientRootPathIs, Expected: 'clientRootPath is: '},
  {Name: 'cappConfigResourcesPathIs', Actual: msg.cappConfigResourcesPathIs, Expected: 'appConfigResourcesPath is: '},
  {Name: 'cappConfigReferencePathIs', Actual: msg.cappConfigReferencePathIs, Expected: 'appConfigReferencePath is: '},
  {Name: 'cclientMetaDataPathIs', Actual: msg.cclientMetaDataPathIs, Expected: 'clientMetaDataPath is: '},
  {Name: 'cclientCommandAliasesPathIs', Actual: msg.cclientCommandAliasesPathIs, Expected: 'clientCommandAliasesPath is: '},
  {Name: 'cclientWorkflowsPathIs', Actual: msg.cclientWorkflowsPathIs, Expected: 'clientWorkflowsPath is: '},
  {Name: 'cframeworkRootPathIs', Actual: msg.cframeworkRootPathIs, Expected: 'frameworkRootPath is: '},
  {Name: 'cappConfigPathIs', Actual: msg.cappConfigPathIs, Expected: 'appConfigPath is: '},
  {Name: 'cpluginConfigPathIs', Actual: msg.cpluginConfigPathIs, Expected: 'pluginConfigPath is: '},
  {Name: 'cpluginResourcePathIs', Actual: msg.cpluginResourcePathIs, Expected: 'pluginResourcePath is: '},
  {Name: 'cconfigPathIs', Actual: msg.cconfigPathIs, Expected: 'configPath is: '},
  {Name: 'cframeworkResourcesPathIs', Actual: msg.cframeworkResourcesPathIs, Expected: 'frameworkResourcesPath is: '},
  {Name: 'cframeworkFullMetaDataPathIs', Actual: msg.cframeworkFullMetaDataPathIs, Expected: 'frameworkFullMetaDataPath is: '},
  {Name: 'cframeworkConfigPathIs', Actual: msg.cframeworkConfigPathIs, Expected: 'frameworkConfigPath is: '},
  {Name: 'cframeworkThemesPathIs', Actual: msg.cframeworkThemesPathIs, Expected: 'frameworkThemesPath is: '},
  {Name: 'cframeworkCommandAliasesPathIs', Actual: msg.cframeworkCommandAliasesPathIs, Expected: 'frameworkCommandAliasesPath is: '},
  {Name: 'cframeworkWorkflowsPathIs', Actual: msg.cframeworkWorkflowsPathIs, Expected: 'frameworkWorkflowsPath is: '},
  {Name: 'ccommandAliasesPathIs', Actual: msg.ccommandAliasesPathIs, Expected: 'commandAliasesPath is: '},
  {Name: 'cworkflowPathIs', Actual: msg.cworkflowPathIs, Expected: 'workflowPath is: '},
  {Name: 'cALL_DATA_IS', Actual: msg.cALL_DATA_IS, Expected: 'ALL DATA IS: '},
  {Name: 'cAllLoadedDataIs', Actual: msg.cAllLoadedDataIs, Expected: 'All loaded data is: '},
  {Name: 'callPluginConfigDataIs', Actual: msg.callPluginConfigDataIs, Expected: 'allPluginConfigData is: '},
  {Name: 'cconfigDataIs', Actual: msg.cconfigDataIs, Expected: 'configData is: '},
  {Name: 'cERROR', Actual: msg.cERROR, Expected: 'ERROR: '},
  {Name: 'cErrorInvalidAccessTo', Actual: msg.cErrorInvalidAccessTo, Expected: 'ERROR: Invalid access to: '},
  {Name: 'crootPathIs', Actual: msg.crootPathIs, Expected: 'rootPath is: '},
  {Name: 'caskIs', Actual: msg.caskIs, Expected: 'ask is: '},
  {Name: 'cINPUT', Actual: msg.cINPUT, Expected: 'INPUT: '},
  {Name: 'cinputIs', Actual: msg.cinputIs, Expected: 'input is: '},
  {Name: 'cstartTimeIs', Actual: msg.cstartTimeIs, Expected: 'startTime is: '},
  {Name: 'cendTimeIs', Actual: msg.cendTimeIs, Expected: 'endTime is: '},
  {Name: 'cdeltaTimeResultIs', Actual: msg.cdeltaTimeResultIs, Expected: 'deltaTimeResult is: '},
  {Name: 'cclientConfigurationIs', Actual: msg.cclientConfigurationIs, Expected: 'clientConfiguration is: '},
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  {Name: 'cloadedAndMergedDataAllFilesIs', Actual: msg.cloadedAndMergedDataAllFilesIs, Expected: 'loadedAndMergedDataAllFiles is: '},
  {Name: 'cloadedAndMergedDataAllFilesContentsAre', Actual: msg.cloadedAndMergedDataAllFilesContentsAre, Expected: 'loadedAndMergedDataAllFiles contents are: '},
  {Name: 'ccommandWorkflowFilePathConfigurationNameIs', Actual: msg.ccommandWorkflowFilePathConfigurationNameIs, Expected: 'commandWorkflowFilePathConfigurationName is: '},
  {Name: 'ccontentsOfDataStructreIs', Actual: msg.ccontentsOfDataStructreIs, Expected: 'contents of D-data structure is: '},
  {Name: 'cclientBusinessRulesAre', Actual: msg.cclientBusinessRulesAre, Expected: 'clientBusinessRules are: '},
  {Name: 'cclientCommandsAre', Actual: msg.cclientCommandsAre, Expected: 'clientCommands are: '},
  {Name: 'ccommandAliasesPathConfigNameIs', Actual: msg.ccommandAliasesPathConfigNameIs, Expected: 'commandAliasesPathConfigName is: '},
  {Name: 'cresolvedSystemCommandsAliasesPathIs', Actual: msg.cresolvedSystemCommandsAliasesPathIs, Expected: 'resolvedSystemCommandsAliasesPath is: '},
  {Name: 'cresolvedClientCommandsAliasesPathIs', Actual: msg.cresolvedClientCommandsAliasesPathIs, Expected: 'resolvedClientCommandsAliasesPath is: '},
  {Name: 'cresolvedCustomCommandsAliasesPathIs', Actual: msg.cresolvedCustomCommandsAliasesPathIs, Expected: 'resolvedCustomCommandsAliasesPath is: '},
  {Name: 'cresolvedPluginCommandsAliasesPathIs', Actual: msg.cresolvedPluginCommandsAliasesPathIs, Expected: 'resolvedPluginCommandsAliasesPath is: '},
  {Name: 'cworkflowPathConfigurationNameIs', Actual: msg.cworkflowPathConfigurationNameIs, Expected: 'workflowPathConfigurationName is: '},
  {Name: 'cresolvedSystemWorkflowsPathIs', Actual: msg.cresolvedSystemWorkflowsPathIs, Expected: 'resolvedSystemWorkflowsPath is: '},
  {Name: 'cresolvedClientWorkflowsPathIs', Actual: msg.cresolvedClientWorkflowsPathIs, Expected: 'resolvedClientWorkflowsPath is: '},
  {Name: 'cresolvedCustomWorkflowsPathIs', Actual: msg.cresolvedCustomWorkflowsPathIs, Expected: 'resolvedCustomWorkflowsPath is: '},
  {Name: 'cbusinessRulesIs', Actual: msg.cbusinessRulesIs, Expected: 'businessRules is: '},
  {Name: 'crulesToExecuteIs', Actual: msg.crulesToExecuteIs, Expected: 'rulesToExecute is: '},
  {Name: 'cruleInputIs', Actual: msg.cruleInputIs, Expected: 'ruleInput is: '},
  {Name: 'cruleMetaDataIs', Actual: msg.cruleMetaDataIs, Expected: 'ruleMetaData is: '},
  {Name: 'cconfigurationNamespaceIs', Actual: msg.cconfigurationNamespaceIs, Expected: 'configurationNamespace is: '},
  {Name: 'cconfigurationNameIs', Actual: msg.cconfigurationNameIs, Expected: 'configurationName is: '},
  {Name: 'cconfigurationValueIs', Actual: msg.cconfigurationValueIs, Expected: 'configurationValue is: '},
  {Name: 'creturnConfiguraitonValueIs', Actual: msg.creturnConfiguraitonValueIs, Expected: 'returnConfigurationValue is: '},
  {Name: 'cattributeJsonStringIs', Actual: msg.cattributeJsonStringIs, Expected: 'attributeJsonString is: '},
  {Name: 'cappAttributeNameIs', Actual: msg.cappAttributeNameIs, Expected: 'appAttributeName is: '},
  {Name: 'cappAttributeValueIs', Actual: msg.cappAttributeValueIs, Expected: 'appAttributeValue is: '},
  {Name: 'cexecuteBusinessRulesColon', Actual: msg.cexecuteBusinessRulesColon, Expected: 'execute business rules: '},
  {Name: 'cdataPathAfterBusinessRulesProcessingIs', Actual: msg.cdataPathAfterBusinessRulesProcessingIs, Expected: 'dataPath after business rules processing is: '},
  {Name: 'cFileToLoadIs', Actual: msg.cFileToLoadIs, Expected: 'File to load is: '},
  {Name: 'cfileExtensionIs', Actual: msg.cfileExtensionIs, Expected: 'fileExtension is: '},
  {Name: 'cexecuteBusienssRulesColon', Actual: msg.cexecuteBusienssRulesColon, Expected: 'executeBusinessRules: '},
  {Name: 'cloadedFileDataIs', Actual: msg.cloadedFileDataIs, Expected: 'loaded file data is: '},
  {Name: 'cBEGIN_PROCESSING_ADDITIONAL_DATA', Actual: msg.cBEGIN_PROCESSING_ADDITIONAL_DATA, Expected: 'BEGIN PROCESSING ADDITIONAL DATA'},
  {Name: 'cDONE_PROCESSING_ADDITIONAL_DATA', Actual: msg.cDONE_PROCESSING_ADDITIONAL_DATA, Expected: 'DONE PROCESSING ADDITIONAL DATA'},
  {Name: 'cMERGED_dataIs', Actual: msg.cMERGED_dataIs, Expected: 'MERGED data is: '},
  {Name: 'cfileContentsAre', Actual: msg.cfileContentsAre, Expected: 'fileContents are: '},
  {Name: 'cparsedDataFileContentsAre', Actual: msg.cparsedDataFileContentsAre, Expected: 'parsedDataFile contents are: '},
  {Name: 'cdataCategoryIs', Actual: msg.cdataCategoryIs, Expected: 'dataCategory is: '},
  {Name: 'cfullyParsedDataIs', Actual: msg.cfullyParsedDataIs, Expected: 'fully parsed data is: '},
  {Name: 'cD_finalMergeIs', Actual: msg.cD_finalMergeIs, Expected: 'D final merge is: '},
  {Name: 'cdataStorageContextNameIs', Actual: msg.cdataStorageContextNameIs, Expected: 'dataStorageContextName is: '},
  {Name: 'cdataToStoreIs', Actual: msg.cdataToStoreIs, Expected: 'dataToStore is: '},
  {Name: 'cdataCategoryDetailsNameIs', Actual: msg.cdataCategoryDetailsNameIs, Expected: 'dataCategoryDetailsName is: '},
  {Name: 'ctempDataIs', Actual: msg.ctempDataIs, Expected: 'tempData is: '},
  {Name: 'ctargetDataIs', Actual: msg.ctargetDataIs, Expected: 'targetData is: '},
  {Name: 'cpageNameIs', Actual: msg.cpageNameIs, Expected: 'pageName is: '},
  {Name: 'cdataToMergeIs', Actual: msg.cdataToMergeIs, Expected: 'data to Merge is: '},
  {Name: 'cdataToMergeElementCountIs', Actual: msg.cdataToMergeElementCountIs, Expected: 'dataToMergeElementCount is: '},
  {Name: 'cdataToMergeElementCountIs1', Actual: msg.cdataToMergeElementCountIs1, Expected: 'dataToMergeElementCount is: 1'},
  {Name: 'ccheckIfThePageNameIsNotAnEmptyString', Actual: msg.ccheckIfThePageNameIsNotAnEmptyString, Expected: 'check if the pageName is not an empty string'},
  {Name: 'cpageNameIsNotAnEmptyString', Actual: msg.cpageNameIsNotAnEmptyString, Expected: 'pageName is not an empty string'},
  {Name: 'cCheckIfTheDataCategoryIsAnEmptyStringOrNot', Actual: msg.cCheckIfTheDataCategoryIsAnEmptyStringOrNot, Expected: 'Check if the dataCategory is an empty string or not'},
  {Name: 'cdataCategoryIsNotAnEmptyString', Actual: msg.cdataCategoryIsNotAnEmptyString, Expected: 'dataCategory is not an empty string!'},
  {Name: 'cdataCategoryIsAnEmptyString', Actual: msg.cdataCategoryIsAnEmptyString, Expected: 'dataCategory IS an empty string!'},
  {Name: 'ctargetDataContentIs', Actual: msg.ctargetDataContentIs, Expected: 'targetData content is: '},
  {Name: 'cafterAttemptToMergeResultsAre', Actual: msg.cafterAttemptToMergeResultsAre, Expected: 'after attempt to merge, results are: '},
  {Name: 'cMergedDataIs', Actual: msg.cMergedDataIs, Expected: 'Merged data is: '},
  {Name: 'cpageNameIsAnEmptyString', Actual: msg.cpageNameIsAnEmptyString, Expected: 'pageName is an empty string'},
  {Name: 'cCaughtTheSpecialCaseThatWeAreMergingFlatList', Actual: msg.cCaughtTheSpecialCaseThatWeAreMergingFlatList, Expected: 'Caught the special case that we are merging a flat list.'},
  {Name: 'cinsideTheForLoop', Actual: msg.cinsideTheForLoop, Expected: 'inside the for-loop'},
  {Name: 'ckeyIs', Actual: msg.ckeyIs, Expected: 'key is: '},
  {Name: 'ctargetDataIsModifiedInTheInputPassByReferenceVariableContentIs', Actual: msg.ctargetDataIsModifiedInTheInputPassByReferenceVariableContentIs, Expected: 'targetData is modified in the input pass-by-reference variable content is: '},
  {Name: 'cdataObjectValueIs', Actual: msg.cdataObjectValueIs, Expected: 'dataObject value is: '},
  {Name: 'celementNameIs', Actual: msg.celementNameIs, Expected: 'elementName is: '},
  {Name: 'cdataObjectIs', Actual: msg.cdataObjectIs, Expected: 'dataObject is: '},
  {Name: 'celementNamePatternIs', Actual: msg.celementNamePatternIs, Expected: 'elementNamePattern is: '},
  {Name: 'celementCountIs', Actual: msg.celementCountIs, Expected: 'elementCount is: '},
  {Name: 'cfileAndPathToLoadFromIs', Actual: msg.cfileAndPathToLoadFromIs, Expected: 'file and path to load from is: '},
  {Name: 'cDoneLoadingDataFrom', Actual: msg.cDoneLoadingDataFrom, Expected: 'DONE loading data from: '},
  {Name: 'cfileAndPathToWriteDataToIs', Actual: msg.cfileAndPathToWriteDataToIs, Expected: 'file and path to write data to is: '},
  {Name: 'cdataToWriteIs', Actual: msg.cdataToWriteIs, Expected: 'data to write is: '},
  {Name: 'cDataWasWrittenToTheFile', Actual: msg.cDataWasWrittenToTheFile, Expected: 'Data was written to the file: '},
  {Name: 'cPathThatShouldBeScannedIs', Actual: msg.cPathThatShouldBeScannedIs, Expected: 'Path that should be scanned is: '},
  {Name: 'cfilesFoundAre', Actual: msg.cfilesFoundAre, Expected: 'files found are: '},
  {Name: 'cdirectorIs', Actual: msg.cdirectorIs, Expected: 'directory is: '},
  {Name: 'cdirectoryPathIs', Actual: msg.cdirectoryPathIs, Expected: 'directoryPath is: '},
  {Name: 'csourceFolderIs', Actual: msg.csourceFolderIs, Expected: 'sourceFolder is: '},
  {Name: 'cdestinationFolderIs', Actual: msg.cdestinationFolderIs, Expected: 'destinationFolder is: '},
  {Name: 'ccopySuccessIs', Actual: msg.ccopySuccessIs, Expected: 'copySuccess is: '},
  {Name: 'ccurrentVersionIs', Actual: msg.ccurrentVersionIs, Expected: 'current version is: '},
  {Name: 'creleasedArchiveFilesListIs', Actual: msg.creleasedArchiveFilesListIs, Expected: 'released archive files list is: '},
  {Name: 'cfileIs', Actual: msg.cfileIs, Expected: 'file is: '},
  {Name: 'cfileNameIs', Actual: msg.cfileNameIs, Expected: 'fileName is: '},
  {Name: 'creleaseFilesListIs', Actual: msg.creleaseFilesListIs, Expected: 'release files list is: '},
  {Name: 'creleaseDateTimeStampIs', Actual: msg.creleaseDateTimeStampIs, Expected: 'release date-time stamp is: '},
  {Name: 'creleaseFileNameIs', Actual: msg.creleaseFileNameIs, Expected: 'release fileName is: '},
  {Name: 'cDoneWritingTheZipFile', Actual: msg.cDoneWritingTheZipFile, Expected: 'Done writing the zip file: '},
  {Name: 'cSetTheReturnPackageSuccessFlagToTrue', Actual: msg.cSetTheReturnPackageSuccessFlagToTrue, Expected: 'Set the return packageSuccess flag to TRUE'},
  {Name: 'ccurrentVersionAlreadyReleased', Actual: msg.ccurrentVersionAlreadyReleased, Expected: 'current version already released'},
  {Name: 'cpackageSuccessIs', Actual: msg.cpackageSuccessIs, Expected: 'packageSuccess is: '},
  {Name: 'cRootPathBeforeProcessingIs', Actual: msg.cRootPathBeforeProcessingIs, Expected: 'RootPath before processing is: '},
  {Name: 'cRootPathAfterProcessingIs', Actual: msg.cRootPathAfterProcessingIs, Expected: 'RootPath after processing is: '},
  {Name: 'cSourceIs', Actual: msg.cSourceIs, Expected: 'source is: '},
  {Name: 'ctargetIs', Actual: msg.ctargetIs, Expected: 'target is: '},
  {Name: 'cErrorCouldNotCopyFile', Actual: msg.cErrorCouldNotCopyFile, Expected: 'ERROR: Could not copy file: '},
  {Name: 'cErrorCouldNotCreateFolder', Actual: msg.cErrorCouldNotCreateFolder, Expected: 'ERROR: Could not create folder: '},
  {Name: 'csuccessfulCopyIs', Actual: msg.csuccessfulCopyIs, Expected: 'successfulCopy is: '},
  {Name: 'cErrorCouldNotCopyFolderContents', Actual: msg.cErrorCouldNotCopyFolderContents, Expected: 'ERROR: Could not copy folder contents: '},
  {Name: 'cargumentValueIs', Actual: msg.cargumentValueIs, Expected: 'argumentValue is: '},
  {Name: 'cconsolidatedArgumentModeIs', Actual: msg.cconsolidatedArgumentModeIs, Expected: 'consolidatedArgumentMode is: '},
  {Name: 'cPushingArgumentValueToReturnDataAsArrayElement', Actual: msg.cPushingArgumentValueToReturnDataAsArrayElement, Expected: 'Pushing the argumentValue to the returnData as an array element'},
  {Name: 'cargumentValueLengthGreaterThanZero', Actual: msg.cargumentValueLengthGreaterThanZero, Expected: 'argumentValue.length > 0'},
  {Name: 'cCallingAnalyzeArgumentIndexIs', Actual: msg.cCallingAnalyzeArgumentIndexIs, Expected: 'Calling analyzeArgumentIndex is: '},
  {Name: 'cReturnArgumentValueSameAsItWasPassedIn', Actual: msg.cReturnArgumentValueSameAsItWasPassedIn, Expected: 'Return the argumentValue the same as it was passed in.'},
  {Name: 'cCheckIfThereAreBracketsOrNoBrackets', Actual: msg.cCheckIfThereAreBracketsOrNoBrackets, Expected: 'Check if there are brackets or no brackets.'},
  {Name: 'cBracketsWereFound', Actual: msg.cBracketsWereFound, Expected: 'Brackets were found'},
  {Name: 'cBracketsWereNotFound', Actual: msg.cBracketsWereNotFound, Expected: 'Brackets were not found'},
  {Name: 'cCheckIfThereIsRegularExpressionOrNot', Actual: msg.cCheckIfThereIsRegularExpressionOrNot, Expected: 'Check if there is a Regular Expression or not.'},
  {Name: 'cRegularExpressionWasFound', Actual: msg.cRegularExpressionWasFound, Expected: 'A regular expression was found!'},
  {Name: 'cNoRegExpFound', Actual: msg.cNoRegExpFound, Expected: 'NO RegExp found!'},
  {Name: 'cBracketsAreFound', Actual: msg.cBracketsAreFound, Expected: 'Brackets ARE found!'},
  {Name: 'cNoSecondaryCommandArgumentDelimiters', Actual: msg.cNoSecondaryCommandArgumentDelimiters, Expected: 'NO secondary command argument delimiters.'},
  {Name: 'cregularExpressionIs', Actual: msg.cregularExpressionIs, Expected: 'regular expression is: '},
  {Name: 'cregExValueIs', Actual: msg.cregExValueIs, Expected: 'regExValue is: '},
  {Name: 'cregularExpressionFlagsAre', Actual: msg.cregularExpressionFlagsAre, Expected: 'regular expression flags are: '},
  {Name: 'cregExFlagsIs', Actual: msg.cregExFlagsIs, Expected: 'regExFlags is: '},
  {Name: 'cargumentValueContainsTheDelimiterLetsSplitIt', Actual: msg.cargumentValueContainsTheDelimiterLetsSplitIt, Expected: 'argumentValue contains the delimiter, lets split it!'},
  {Name: 'cargumentValueAfterAttemptingToRemoveOpenBracketFromAllArrayElementsIs', Actual: msg.cargumentValueAfterAttemptingToRemoveOpenBracketFromAllArrayElementsIs, Expected: 'argumentValue after attempting to remove a open bracket from all array elements is: '},
  {Name: 'cargumentValueAfterAttemptingToRemoveCloseBracketFromAllArrayElementsIs', Actual: msg.cargumentValueAfterAttemptingToRemoveCloseBracketFromAllArrayElementsIs, Expected: 'argumentValue after attempting to remove a close bracket from all array elements is: '},
  {Name: 'csecondaryCommandArgsDelimiterIs', Actual: msg.csecondaryCommandArgsDelimiterIs, Expected: 'secondaryCommandArgsDelimiter is: '},
  {Name: 'cargumentArrayIs', Actual: msg.cargumentArrayIs, Expected: 'argumentArray is: '},
  {Name: 'cformattingIs', Actual: msg.cformattingIs, Expected: 'formatting is: '},
  {Name: 'cdeltaTimeIs', Actual: msg.cdeltaTimeIs, Expected: 'deltaTime is: '},
  {Name: 'cformatIs', Actual: msg.cformatIs, Expected: 'format is: '},
  {Name: 'creturnDeltaTimeIs', Actual: msg.creturnDeltaTimeIs, Expected: 'returnDeltaTime is: '},
  {Name: 'csleepTimeIs', Actual: msg.csleepTimeIs, Expected: 'sleepTime is: '},
  {Name: 'cworkflowNameIs', Actual: msg.cworkflowNameIs, Expected: 'workflowName is: '},
  {Name: 'csecondTierWorkflowNameIs', Actual: msg.csecondTierWorkflowNameIs, Expected: 'secondTierWorkflowName is: '},
  {Name: 'ccurrentWorkflowIs', Actual: msg.ccurrentWorkflowIs, Expected: 'currentWorkflow is: '},
  {Name: 'cworkflowValueIs', Actual: msg.cworkflowValueIs, Expected: 'workflowValue is: '},
  {Name: 'cdataHivePathArrayIs', Actual: msg.cdataHivePathArrayIs, Expected: 'dataHivePathArray is: '},
  {Name: 'ccontentsOfLeafDataHiveElementIs', Actual: msg.ccontentsOfLeafDataHiveElementIs, Expected: 'contents of leafDataHiveElement is: '},
  {Name: 'centryIs', Actual: msg.centryIs, Expected: 'entry is: '},
  {Name: 'cattributeValueIs', Actual: msg.cattributeValueIs, Expected: 'attributeValue is: '},
  {Name: 'ckey1Is', Actual: msg.ckey1Is, Expected: 'key1 is: '},
  {Name: 'ckey2Is', Actual: msg.ckey2Is, Expected: 'key2 is: '},
  {Name: 'centityIs', Actual: msg.centityIs, Expected: 'entity is: '},
  {Name: 'cqueueNameSpaceIs', Actual: msg.cqueueNameSpaceIs, Expected: 'queueNameSpace is: '},
  {Name: 'cstackNameSpaceIs', Actual: msg.cstackNameSpaceIs, Expected: 'stackNameSpace is: '},
  {Name: 'cWarningStackColon', Actual: msg.cWarningStackColon, Expected: 'WARNING: Stack: '},
  {Name: 'cAlreadyExists', Actual: msg.cAlreadyExists, Expected: ' ALREADY exist!'},
  {Name: 'cdoesNotExist', Actual: msg.cdoesNotExist, Expected: ' does not exist!'},
  {Name: 'cisEmpty', Actual: msg.cisEmpty, Expected: ' is empty!'},
  {Name: 'cContentsOfTheStackNamespace', Actual: msg.cContentsOfTheStackNamespace, Expected: 'Contents of the stack namespace: '},
  {Name: 'cContentsOfTheQueueNamespace', Actual: msg.cContentsOfTheQueueNamespace, Expected: 'Contents of the queue namespace: '},
  {Name: 'cwordDelimiterIs', Actual: msg.cwordDelimiterIs, Expected: 'wordDelimiter is: '},
  {Name: 'cstringContainsAcronymIs', Actual: msg.cstringContainsAcronymIs, Expected: 'stringContainsAcronym is: '},
  {Name: 'cErrorZipPackageReleaseFailed', Actual: msg.cErrorZipPackageReleaseFailed, Expected: 'ERROR: Zip package release failed: '},
  {Name: 'cminimumColorRangeIs', Actual: msg.cminimumColorRangeIs, Expected: 'minimumColorRange is: '},
  {Name: 'cmaximumColorRangeIs', Actual: msg.cmaximumColorRangeIs, Expected: 'maximumColorRange is: '},
  {Name: 'callSystemConstantsValidationDataIs', Actual: msg.callSystemConstantsValidationDataIs, Expected: 'allSystemConstantsValidationData is: '},
  {Name: 'callClientConstantsValidationDataIs', Actual: msg.callClientConstantsValidationDataIs, Expected: 'allClientConstantsValidationData is: '},
  {Name: 'cconstantLibraryDataIs', Actual: msg.cconstantLibraryDataIs, Expected: 'constantLibraryData is: '},
  {Name: 'cclientValidationDataIs', Actual: msg.cclientValidationDataIs, Expected: 'clientValidationData is: '},
  {Name: 'carrayValidationDataIs', Actual: msg.carrayValidationDataIs, Expected: 'arrayValidationData is: '},
  {Name: 'cfilesListLimitIs', Actual: msg.cfilesListLimitIs, Expected: 'filesListLimit is: '},
  {Name: 'cenableLimitIs', Actual: msg.cenableLimitIs, Expected: 'enableLimit is: '},
  {Name: 'cfilesLimitIs', Actual: msg.cfilesLimitIs, Expected: 'filesLimit is: '},
  {Name: 'cinputDataRightBeforeProcessingIs', Actual: msg.cinputDataRightBeforeProcessingIs, Expected: 'inputData right before processing is: '},
  {Name: 'cnumberIs', Actual: msg.cnumberIs, Expected: 'number is: '},
  {Name: 'capplicationMetaDataPathAndFilenameIs', Actual: msg.capplicationMetaDataPathAndFilenameIs, Expected: 'applicationMetaDataPathAndFilename is: '},
  {Name: 'cframeworkMetaDataPathAndFilenameIs', Actual: msg.cframeworkMetaDataPathAndFilenameIs, Expected: 'frameworkMetaDataPathAndFilename is: '},
  {Name: 'cpluginMetaDataPathAndFilenameIs', Actual: msg.cpluginMetaDataPathAndFilenameIs, Expected: 'pluginMetaDataPathAndFilename is: '},
  {Name: 'capplicationMetaDataIs', Actual: msg.capplicationMetaDataIs, Expected: 'applicationMetaData is: '},
  {Name: 'cframeworkMetaDataIs', Actual: msg.cframeworkMetaDataIs, Expected: 'frameworkMetaData is: '},
  {Name: 'cApplicationNameIs', Actual: msg.cApplicationNameIs, Expected: 'ApplicationName is: '},
  {Name: 'cApplicationVersionNumberIs', Actual: msg.cApplicationVersionNumberIs, Expected: 'ApplicationVersionNumber is: '},
  {Name: 'cApplicationDescriptionIs', Actual: msg.cApplicationDescriptionIs, Expected: 'ApplicationDescription is: '},
  {Name: 'cFrameworkNameIs', Actual: msg.cFrameworkNameIs, Expected: 'FrameworkName is: '},
  {Name: 'cFrameworkVersionNumberIs', Actual: msg.cFrameworkVersionNumberIs, Expected: 'FrameworkVersionNumber is: '},
  {Name: 'cFrameworkDescriptionIs', Actual: msg.cFrameworkDescriptionIs, Expected: 'FrameworkDescription is: '},
  {Name: 'cPluginVersionNumberIs', Actual: msg.cPluginVersionNumberIs, Expected: 'PluginVersionNumber is: '},
  {Name: 'cPluginDescriptionIs', Actual: msg.cPluginDescriptionIs, Expected: 'PluginDescription is: '},
  {Name: 'csessionDateTimeStampIs', Actual: msg.csessionDateTimeStampIs, Expected: 'sessionDateTimeStamp is: '},
  {Name: 'clogFileNameIs', Actual: msg.clogFileNameIs, Expected: 'logFileName is: '},
  {Name: 'cprimaryCommandDelimiterIs', Actual: msg.cprimaryCommandDelimiterIs, Expected: 'primaryCommandDelimiter is: '},
  {Name: 'csecondaryCommandDelimiterIs', Actual: msg.csecondaryCommandDelimiterIs, Expected: 'secondaryCommandDelimiter is: '},
  {Name: 'ctertiaryCommandDelimiterIs', Actual: msg.ctertiaryCommandDelimiterIs, Expected: 'tertiaryCommandDelimiter is: '},
  {Name: 'ccommandSequencerCommandToEnqueueIs', Actual: msg.ccommandSequencerCommandToEnqueueIs, Expected: 'commandSequencer Command To Enqueue is: '},
  {Name: 'cWarningMessageIsUndefined', Actual: msg.cWarningMessageIsUndefined, Expected: 'WARNING: message is undefined'},
  {Name: 'cclassPathIs', Actual: msg.cclassPathIs, Expected: 'classPath is: '},
  {Name: 'cargsArrayContainsRegEx1Is', Actual: msg.cargsArrayContainsRegEx1Is, Expected: 'argsArrayContainsRegEx1 is: '},
  {Name: 'cargsArrayContainsRegEx2Is', Actual: msg.cargsArrayContainsRegEx2Is, Expected: 'argsArrayContainsRegEx2 is: '},
  {Name: 'cargsArrayContainsColonIs', Actual: msg.cargsArrayContainsColonIs, Expected: 'argsArrayContainsColon is: '},
  {Name: 'cfileToSaveToIs', Actual: msg.cfileToSaveToIs, Expected: 'fileToSaveTo is: '},
  {Name: 'cdataToWriteOutIs', Actual: msg.cdataToWriteOutIs, Expected: 'dataToWriteOut is: '},
  {Name: 'clogFilePathAndNameIs', Actual: msg.clogFilePathAndNameIs, Expected: 'logFilePathAndName is: '},
  {Name: 'cmetaDataOutputIs', Actual: msg.cmetaDataOutputIs, Expected: 'metaDataOutput is: '},
  {Name: 'callCommandAliasesDataIs', Actual: msg.callCommandAliasesDataIs, Expected: 'allCommandAliasesData is: '},
  {Name: 'cresolvedFrameworkConstantsPathActualIs', Actual: msg.cresolvedFrameworkConstantsPathActualIs, Expected: 'resolvedFrameworkConstantsPathActual is: '},
  {Name: 'cresolvedClientConstantsPathActualIs', Actual: msg.cresolvedClientConstantsPathActualIs, Expected: 'resolvedClientConstantsPathActual is: '},
  {Name: 'cframeworkConstantsValidationDataIs', Actual: msg.cframeworkConstantsValidationDataIs, Expected: 'frameworkConstantsValidationData is: '},
  {Name: 'capplicationConstantsValidationDataIs', Actual: msg.capplicationConstantsValidationDataIs, Expected: 'applicationConstantsValidationData is: '},
  {Name: 'cActualColonDoublePercent', Actual: msg.cActualColonDoublePercent, Expected: '"Actual": "%%",'},
  {Name: 'callCommandWorkflowsDataIs', Actual: msg.callCommandWorkflowsDataIs, Expected: 'allCommandWorkflowsData is: '},
  {Name: 'csourceDestinationArrayIs', Actual: msg.csourceDestinationArrayIs, Expected: 'sourceDestinationArray is: '},
  {Name: 'cfilterArrayIs', Actual: msg.cfilterArrayIs, Expected: 'filterArray is: '},
  {Name: 'cnamespaceDataObjectPathNotFound', Actual: msg.cnamespaceDataObjectPathNotFound, Expected: 'ERROR: Namespace data object path not found: '},
  {Name: 'cnewValueIs', Actual: msg.cnewValueIs, Expected: 'newValue is: '},
  {Name: 'cparentDataObjectBeforeMutationIs', Actual: msg.cparentDataObjectBeforeMutationIs, Expected: 'parentDataObject BEFORE mutation is: '},
  {Name: 'cparentDataObjectAfterMutationIs', Actual: msg.cparentDataObjectAfterMutationIs, Expected: 'parentDataObject AFTER mutation is: '},
  {Name: 'callPluginsDataIs', Actual: msg.callPluginsDataIs, Expected: 'allPluginsData is: '},
  {Name: 'cpluginsPathsAre', Actual: msg.cpluginsPathsAre, Expected: 'pluginPaths are: '},
  {Name: 'cpluginNameIs', Actual: msg.cpluginNameIs, Expected: 'pluginName is: '},
  {Name: 'cpluginDataIs', Actual: msg.cpluginDataIs, Expected: 'pluginData is: '},
  {Name: 'cpluginNamesIs', Actual: msg.cpluginNamesIs, Expected: 'pluginNames is: '},
  {Name: 'cpluginPathIs', Actual: msg.cpluginPathIs, Expected: 'pluginPath is: '},
  {Name: 'cpluginRulesIs', Actual: msg.cpluginRulesIs, Expected: 'pluginRules is: '},
  {Name: 'cpluginCommandsIs', Actual: msg.cpluginCommandsIs, Expected: 'pluginCommands is: '},
  {Name: 'cpluginConfigDataIs', Actual: msg.cpluginConfigDataIs, Expected: 'pluginConfigData is: '},
  {Name: 'ccomaCountIs', Actual: msg.ccomaCountIs, Expected: 'comaCount is: '},
  {Name: 'cpluginRegistryPathIs', Actual: msg.cpluginRegistryPathIs, Expected: 'pluginRegistryPath is: '},
  {Name: 'cresolvedPluginPathIs', Actual: msg.cresolvedPluginPathIs, Expected: 'resolvedPluginPath is: '},
  {Name: 'cpluginMetaDataIs', Actual: msg.cpluginMetaDataIs, Expected: 'pluginMetaData is: '},
  {Name: 'cpluginExecutionPathIs', Actual: msg.cpluginExecutionPathIs, Expected: 'pluginExecutionPath is: '},
  {Name: 'cdataLoadedIs', Actual: msg.cdataLoadedIs, Expected: 'dataLoaded is: '},
  {Name: 'cresolvedPluginRegistryPathIs', Actual: msg.cresolvedPluginRegistryPathIs, Expected: 'resolvedPluginRegistryPath is: '},
  {Name: 'cpluginRegistryDataIs', Actual: msg.cpluginRegistryDataIs, Expected: 'pluginRegistryData is: '},
  {Name: 'cerrorMessage', Actual: msg.cerrorMessage, Expected: 'error message: '},
  {Name: 'ccurrentPluginNameIs', Actual: msg.ccurrentPluginNameIs, Expected: 'currentPluginName is: '},
  {Name: 'cpluginRegistryIs', Actual: msg.cpluginRegistryIs, Expected: 'pluginRegistry is: '},
  {Name: 'cpluginRegistryListIs', Actual: msg.cpluginRegistryListIs, Expected: 'pluginRegistryList is: '},
  {Name: 'cpluginRegistryFolderListIs', Actual: msg.cpluginRegistryFolderListIs, Expected: 'pluginRegistryFolderList is: '},
  {Name: 'cfolderPluginIs', Actual: msg.cfolderPluginIs, Expected: 'folderPlugin is: '},
  {Name: 'cfolderPluginNameIs', Actual: msg.cfolderPluginNameIs, Expected: 'folderPluginName is: '},
  {Name: 'cregistryPluginIs', Actual: msg.cregistryPluginIs, Expected: 'registryPlugin is: '},
  {Name: 'cregistryPluginNameIs', Actual: msg.cregistryPluginNameIs, Expected: 'registryPluginName is: '},
  {Name: 'csynchronizedPluginRegistryListIs', Actual: msg.csynchronizedPluginRegistryListIs, Expected: 'synchronizedPluginRegistryList is: '},
  {Name: 'cpluginKeyIs', Actual: msg.cpluginKeyIs, Expected: 'pluginKey is: '},
  {Name: 'cloadedPluginMetaDataAtIndex', Actual: msg.cloadedPluginMetaDataAtIndex, Expected: 'loadedPluginMetaData at index: '},
  {Name: 'cpluginsMetaDataIs', Actual: msg.cpluginsMetaDataIs, Expected: 'pluginsMetaData is: '},
  {Name: 'cpluginMetaDataKeyIs', Actual: msg.cpluginMetaDataKeyIs, Expected: 'pluginMetaDataKey is: '},
  {Name: 'cpluginPathUriAtIndex', Actual: msg.cpluginPathUriAtIndex, Expected: 'pluginPathURI at index: '},
  {Name: 'cpluginsExecutionPathsIs', Actual: msg.cpluginsExecutionPathsIs, Expected: 'pluginsExecutionPaths is: '},
  {Name: 'cpluginsRootPathIs', Actual: msg.cpluginsRootPathIs, Expected: 'pluginsRootPath is: '},
  {Name: 'cpluginRegistryListLengthEqualZero', Actual: msg.cpluginRegistryListLengthEqualZero, Expected: 'pluginRegistryList.length === 0'},
  {Name: 'cpluginRegistryListLengthNotEqualZero', Actual: msg.cpluginRegistryListLengthNotEqualZero, Expected: 'pluginRegistryList.length !== 0'},
  {Name: 'cpluginPathsArrayIs', Actual: msg.cpluginPathsArrayIs, Expected: 'pluginPathsArray is: '},
  {Name: 'cvalidationFrameworkArrayIs', Actual: msg.cvalidationFrameworkArrayIs, Expected: 'validationFrameworkArray is: '},
  {Name: 'cvalidationApplicationArrayIs', Actual: msg.cvalidationApplicationArrayIs, Expected: 'validationApplicationArray is: '},
  {Name: 'cvalidationPluginsMetaArrayIs', Actual: msg.cvalidationPluginsMetaArrayIs, Expected: 'validationPluginsMetaArray is: '},
  {Name: 'cvalidationArrayBeforePluginConstantsValidationDataMergeIs', Actual: msg.cvalidationArrayBeforePluginConstantsValidationDataMergeIs, Expected: 'validationArray before plugin constants validation data merge is: '},
  {Name: 'cvalidationArrayAfterPluginConstantsValidationDataMergeIs', Actual: msg.cvalidationArrayAfterPluginConstantsValidationDataMergeIs, Expected: 'validationArray after plugin constants validation data merge is: '},
  {Name: 'clineIs', Actual: msg.clineIs, Expected: 'line is: '},
  {Name: 'celement1Is', Actual: msg.celement1Is, Expected: 'element1 is: '},
  {Name: 'cconstantsNamespaceParentObjectIs', Actual: msg.cconstantsNamespaceParentObjectIs, Expected: 'constantsNamespaceParentObject is: '},
  {Name: 'cconstantNamespaceObjectIs', Actual: msg.cconstantNamespaceObjectIs, Expected: 'constantNamespaceObject is: '},
  {Name: 'celementIs', Actual: msg.celementIs, Expected: 'element is: '},
  {Name: 'cvalidationLineItemIs', Actual: msg.cvalidationLineItemIs, Expected: 'validationLineItem is: '},
  {Name: 'cphase1ResultsIs', Actual: msg.cphase1ResultsIs, Expected: 'phase1Results is: '},
  {Name: 'cphase2ResultsIs', Actual: msg.cphase2ResultsIs, Expected: 'phase2Results is: '},
  {Name: 'cconstantValidationObjectIs', Actual: msg.cconstantValidationObjectIs, Expected: 'constantValidationObject is: '},
  {Name: 'ccharacterIs', Actual: msg.ccharacterIs, Expected: 'character is: '},
  {Name: 'cconstantTypeIs', Actual: msg.cconstantTypeIs, Expected: 'constantType is: '},
  {Name: 'cconstantPrefixIs', Actual: msg.cconstantPrefixIs, Expected: 'constantPrefix is: '},
  {Name: 'cinputAndOutputAreTheSame', Actual: msg.cinputAndOutputAreTheSame, Expected: 'input and output are the same!'},
  {Name: 'carrayElementIs', Actual: msg.carrayElementIs, Expected: 'arrayElement is: '},
  {Name: 'cattributeNameIs', Actual: msg.cattributeNameIs, Expected: 'attributeName is: '},
  {Name: 'cjthIteration', Actual: msg.cjthIteration, Expected: 'j-th iteration: '},
  {Name: 'cSpaceDataColonSpace', Actual: msg.cSpaceDataColonSpace, Expected: ' data: '},
  {Name: 'cinputDataLengthIs', Actual: msg.cinputDataLengthIs, Expected: 'inputData.length is: '},
  {Name: 'cvalidationTypesInputArrayIs', Actual: msg.cvalidationTypesInputArrayIs, Expected: 'validationTypesInputArray is: '},
  {Name: 'cvalidationTypesConfirmedArrayIs', Actual: msg.cvalidationTypesConfirmedArrayIs, Expected: 'validationTypesConfirmedArray is: '},
  {Name: 'cvalidationTypesConfirmedListIs', Actual: msg.cvalidationTypesConfirmedListIs, Expected: 'validationTypesConfirmedList is: '},
  {Name: 'callCommandAliasesToValidateIs', Actual: msg.callCommandAliasesToValidateIs, Expected: 'allCommandAliasesToValidate is: '},
  {Name: 'cvalidationArrayIs', Actual: msg.cvalidationArrayIs, Expected: 'validationArray is: '},
  {Name: 'capplicationCommandAliasesIs', Actual: msg.capplicationCommandAliasesIs, Expected: 'applicationCommandAliases is: '},
  {Name: 'ccommandNamespaceTypesInputArrayIs', Actual: msg.ccommandNamespaceTypesInputArrayIs, Expected: 'commandNamespaceTypesInputArray is: '},
  {Name: 'ccommandNamespaceTypesConfirmedArrayIs', Actual: msg.ccommandNamespaceTypesConfirmedArrayIs, Expected: 'commandNamespaceTypesConfirmedArray is: '},
  {Name: 'cnamespaceAllCommandsDataObjectIs', Actual: msg.cnamespaceAllCommandsDataObjectIs, Expected: 'namespaceAllCommandsDataObject is: '},
  {Name: 'cprocessingFrameworkCommands', Actual: msg.cprocessingFrameworkCommands, Expected: 'processing framework commands'},
  {Name: 'cprocessingApplicationCommands', Actual: msg.cprocessingApplicationCommands, Expected: 'processing application commands'},
  {Name: 'cprocessingPluginsCommands', Actual: msg.cprocessingPluginsCommands, Expected: 'processing plugin commands'},
  {Name: 'cprocessingCommandsFor', Actual: msg.cprocessingCommandsFor, Expected: 'processing commands for: '},
  {Name: 'cframeworkCommandAliasesIs', Actual: msg.cframeworkCommandAliasesIs, Expected: 'frameworkCommandAliases is: '},
  {Name: 'cpluginsCommandAliasesIs', Actual: msg.cpluginsCommandAliasesIs, Expected: 'pluginsCommandAliases is: '},
  {Name: 'cextraUserEnteredCommandAliasesIs', Actual: msg.cextraUserEnteredCommandAliasesIs, Expected: 'extraUserEnteredCommandAliases is: '},
  {Name: 'cworkflowNamespaceTypesInputArrayIs', Actual: msg.cworkflowNamespaceTypesInputArrayIs, Expected: 'workflowNamespaceTypesInputArray is: '},
  {Name: 'cworkflowNamespaceTypesConfirmedArrayIs', Actual: msg.cworkflowNamespaceTypesConfirmedArrayIs, Expected: 'workflowNamespaceTypesConfirmedArray is: '},
  {Name: 'cprocessingFrameworkWorkflows', Actual: msg.cprocessingFrameworkWorkflows, Expected: 'processing framework workflows'},
  {Name: 'cprocessingApplicationWorkflows', Actual: msg.cprocessingApplicationWorkflows, Expected: 'processing application workflows'},
  {Name: 'cprocessingPluginsWorkflows', Actual: msg.cprocessingPluginsWorkflows, Expected: 'processing plugins workflows'},
  {Name: 'cprocessingWorkflowsFor', Actual: msg.cprocessingWorkflowsFor, Expected: 'processing workflows for: '},
  {Name: 'cframeworkWorkflowsIs', Actual: msg.cframeworkWorkflowsIs, Expected: 'frameworkWorkflows is: '},
  {Name: 'capplicationWorkflowsIs', Actual: msg.capplicationWorkflowsIs, Expected: 'applicationWorkflows is: '},
  {Name: 'cextraUserEnteredWorkflowsIs', Actual: msg.cextraUserEnteredWorkflowsIs, Expected: 'extraUserEnteredWorkflows is: '},
  {Name: 'cnamespaceAllWorkflowsDataObjectIs', Actual: msg.cnamespaceAllWorkflowsDataObjectIs, Expected: 'namespaceAllWorkflowsDataObject is: '},
  {Name: 'cdataNameIs', Actual: msg.cdataNameIs, Expected: 'dataName is: '},
  {Name: 'cdataIs', Actual: msg.cdataIs, Expected: 'data is: '},
  {Name: 'cdataSourceIs', Actual: msg.cdataSourceIs, Expected: 'dataSource is: '},
  {Name: 'cpossibleDataNamesArrayIs', Actual: msg.cpossibleDataNamesArrayIs, Expected: 'possibleDataNamesArray is: '},
  {Name: 'cdataElementIs', Actual: msg.cdataElementIs, Expected: 'dataElement is: '},
  {Name: 'ccommandsAre', Actual: msg.ccommandsAre, Expected: 'commands are: '},
  {Name: 'cbusinessRulesAre', Actual: msg.cbusinessRulesAre, Expected: 'businessRules are: '},
  {Name: 'cmessageFromChild', Actual: msg.cmessageFromChild, Expected: 'message from child: '},
  {Name: 'cexitedWithCode', Actual: msg.cexitedWithCode, Expected: 'Exited with code: '},
  {Name: 'candSignal', Actual: msg.candSignal, Expected: ', and signal: '},
  {Name: 'cisAbsent', Actual: msg.cisAbsent, Expected: 'is absent.'},
  {Name: 'creadECONNRESET', Actual: msg.creadECONNRESET, Expected: 'read ECONNRESET'},
  {Name: 'cbufferIs', Actual: msg.cbufferIs, Expected: 'buffer is: '},
  {Name: 'capplicationRootPathIs', Actual: msg.capplicationRootPathIs, Expected: 'applicationRootPath is: '},
  {Name: 'cErrorFromChildColon', Actual: msg.cErrorFromChildColon, Expected: 'Error from child: '},
  {Name: 'cChildDisconnected', Actual: msg.cChildDisconnected, Expected: 'Child disconnected'},
  {Name: 'cscriptContentIs', Actual: msg.cscriptContentIs, Expected: 'Script content is: '},
  {Name: 'cOpeningColon', Actual: msg.cOpeningColon, Expected: 'Opening: '},
  {Name: 'cExitingChildProcess', Actual: msg.cExitingChildProcess, Expected: 'Exiting child process'},
  {Name: 'cErrorOnShell', Actual: msg.cErrorOnShell, Expected: 'Error on shell: '},
  {Name: 'coptionsAre', Actual: msg.coptionsAre, Expected: 'options are: '},
  // New Workflow defined messages.
  {Name: 'cnamespaceWorkflowDataIs', Actual: msg.cnamespaceWorkflowDataIs, Expected: 'namespaceWorkflowData is: '},
  {Name: 'callWorkflowDataIs', Actual: msg.callWorkflowDataIs, Expected: 'allWorkflowData is: '},
  {Name: 'cworkflowDataIs', Actual: msg.cworkflowDataIs, Expected: 'workflowData is: '},
  {Name: 'cworkflowEntityIs', Actual: msg.cworkflowEntityIs, Expected: 'workflowEntity is: '},
  {Name: 'cworkflowObjectIs', Actual: msg.cworkflowObjectIs, Expected: 'workflowObject is: '},
  {Name: 'cworkflowIs', Actual: msg.cworkflowIs, Expected: 'workflow is: '},
  {Name: 'cworkflowDataStructureWorkflowEntityIs', Actual: msg.cworkflowDataStructureWorkflowEntityIs, Expected: 'workflowDataStructure[workflowEntity] is: '},
  {Name: 'cinternalWorkflowDataStructureWorkflowEntityIs', Actual: msg.cinternalWorkflowDataStructureWorkflowEntityIs, Expected: 'internalWorkflowDataStructure[workflowEntity] is: '},
  {Name: 'cworkflowDataStructureWorkflowEntityIsOfTypeObject', Actual: msg.cworkflowDataStructureWorkflowEntityIsOfTypeObject, Expected: 'workflowDataStructure[workflowEntity] is of type object!'},
  {Name: 'cinternalWorkflowDataStructureWorkflowEntityIsOfTypeObject', Actual: msg.cinternalWorkflowDataStructureWorkflowEntityIsOfTypeObject, Expected: 'internalWorkflowDataStructure[workflowEntity] is of type object!'},
  {Name: 'callWorkflowsTempReturnedFromRecursiveCallIs', Actual: msg.callWorkflowsTempReturnedFromRecursiveCallIs, Expected: 'allWorkflowsTemp returned from the recursive call is: '},
  {Name: 'callWorkflowsAfterPushingToArray1Is', Actual: msg.callWorkflowsAfterPushingToArray1Is, Expected: 'allWorkflows after pushing to the array 1 is: '},
  {Name: 'callWorkflowsAfterPushingToArray2Is', Actual: msg.callWorkflowsAfterPushingToArray2Is, Expected: 'allWorkflows after pushing to the array 2 is: '},
  {Name: 'cworkflowDataStructureIs', Actual: msg.cworkflowDataStructureIs, Expected: 'workflowDataStructure is: '},
  {Name: 'cinternalWorkflowDataStructureIs', Actual: msg.cinternalWorkflowDataStructureIs, Expected: 'internalWorkflowDataStructure is: '},
  {Name: 'cnamespaceToFindIs', Actual: msg.cnamespaceToFindIs, Expected: 'namespaceToFind is: '},
  {Name: 'cworkflowNamespaceObjectIs', Actual: msg.cworkflowNamespaceObjectIs, Expected: 'workflowNamespaceObject is: '},
  {Name: 'cleafNodeNameIs', Actual: msg.cleafNodeNameIs, Expected: 'leafNodeName is: '},
  {Name: 'cpropertyIs', Actual: msg.cpropertyIs, Expected: 'property is: '},
  {Name: 'cinputDataPropertyIs', Actual: msg.cinputDataPropertyIs, Expected: 'inputData[property] is: '},
  {Name: 'cinputMetaDataPropertyIs', Actual: msg.cinputMetaDataPropertyIs, Expected: 'inputMetaData[property] is: '},
  {Name: 'cworkflowEntityValueIs', Actual: msg.cworkflowEntityValueIs, Expected: 'workflowEntity[Value] is: '},
  {Name: 'cworkflowParentIs', Actual: msg.cworkflowParentIs, Expected: 'workflowParent is: '},
  {Name: 'cDoneWithForLoopReturnDataIs', Actual: msg.cDoneWithForLoopReturnDataIs, Expected: 'Done with the for-loop, returnData is: '},
  {Name: 'cAfterRecursiveCallReturnDataPropertyIs', Actual: msg.cAfterRecursiveCallReturnDataPropertyIs, Expected: 'AFTER recursive call returnData[property] is: '},
  {Name: 'cdataToMergeKeysJis', Actual: msg.cdataToMergeKeysJis, Expected: 'dataToMergeKeys[j] is: '},
  {Name: 'cAfterConcatenating2ArraysInputDataPropertyIs', Actual: msg.cAfterConcatenating2ArraysInputDataPropertyIs, Expected: 'AFTER concatenating two arrays: inputData[property] is: '},
  {Name: 'cAfterRecursiveMergeInputDataPropertyIs', Actual: msg.cAfterRecursiveMergeInputDataPropertyIs, Expected: 'AFTER recursive merge: inputData[property] is: '},
  {Name: 'cnamespaceDataObjectIs', Actual: msg.cnamespaceDataObjectIs, Expected: 'namespaceDataObject is: '},
  {Name: 'cdataStructureIs', Actual: msg.cdataStructureIs, Expected: 'dataStructure is: '},
  {Name: 'ccommandQueueIs', Actual: msg.ccommandQueueIs, Expected: 'commandQueue is: '},
  // MultiCommandAliases
  {Name: 'cnamespaceCommandsDataIs', Actual: msg.cnamespaceCommandsDataIs, Expected: 'namespaceCommandsData is: '},
  {Name: 'callCommandAliasFlatDataIs', Actual: msg.callCommandAliasFlatDataIs, Expected: 'allCommandAliasFlatData is: '},
  {Name: 'cfoundValidCommandIs', Actual: msg.cfoundValidCommandIs, Expected: 'foundValidCommand is: '},
  {Name: 'ccommandAliasDataIs', Actual: msg.ccommandAliasDataIs, Expected: 'commandAliasData is: '},
  {Name: 'ccommandAliasNameIs', Actual: msg.ccommandAliasNameIs, Expected: 'commandAliasName is: '},
  {Name: 'ccommandAliasEntityIs', Actual: msg.ccommandAliasEntityIs, Expected: 'commandAliasEntity is: '},
  {Name: 'ccommandAliasEntityValueIs', Actual: msg.ccommandAliasEntityValueIs, Expected: 'commandAliasEntityValue is: '},
  {Name: 'ctempCommandAliasCountIs', Actual: msg.ctempCommandAliasCountIs, Expected: 'tempCommandAliasCount is: '},
  {Name: 'caddingCommandAliasCount', Actual: msg.caddingCommandAliasCount, Expected: 'adding commandAliasCount: '},
  {Name: 'cAfterAddingCommandAliasCountAndTempCommandAliasCount', Actual: msg.cAfterAddingCommandAliasCountAndTempCommandAliasCount, Expected: 'After adding commandAliasCount and tempCommandAliasCount: '},
  {Name: 'ccommandAliasCountIs', Actual: msg.ccommandAliasCountIs, Expected: 'commandAliasCount is: '},
  {Name: 'ccommandAliasesObjectTempIs', Actual: msg.ccommandAliasesObjectTempIs, Expected: 'commandAliasesObjectTemp is: '},
  {Name: 'ccommandAliasObjectIs', Actual: msg.ccommandAliasObjectIs, Expected: 'commandAliasObject is: '},
  {Name: 'cinternalCommandAliasDataStructureIs', Actual: msg.cinternalCommandAliasDataStructureIs, Expected: 'internalCommandAliasDataStructure is: '},
  {Name: 'cinternalCommandAliasDataStructureCommandAliasEntityIs', Actual: msg.cinternalCommandAliasDataStructureCommandAliasEntityIs, Expected: 'internalCommandAliasDataStructure[commandAliasEntity] is: '},
  {Name: 'callCommandAliasesTempReturnedFromRecursiveCallIs', Actual: msg.callCommandAliasesTempReturnedFromRecursiveCallIs, Expected: 'allCommandAliasesTemp returned from the recursive call is: '},
  {Name: 'callCommandsDataAfterPushingToTheArrayIs', Actual: msg.callCommandsDataAfterPushingToTheArrayIs, Expected: 'allCommandsData after pushing to the array is: '},
  {Name: 'callCommandsDataIs', Actual: msg.callCommandsDataIs, Expected: 'allCommandsData is: '},
  {Name: 'ccommandAliasDataStructureCommandAliasEntityIs', Actual: msg.ccommandAliasDataStructureCommandAliasEntityIs, Expected: 'commandAliasDataStructure[commandAliasEntity] is: '},
  {Name: 'cnamespaceCommandsObjectIs', Actual: msg.cnamespaceCommandsObjectIs, Expected: 'namespaceCommandsObject is: '},
  {Name: 'cTheConstantDoesNotExist', Actual: msg.cTheConstantDoesNotExist, Expected: 'The constant does not exist: '},
  {Name: 'callWorkflowsDataIs', Actual: msg.callWorkflowsDataIs, Expected: 'allWorkflowsData is: '},
  {Name: 'callWorkflowsToValidate', Actual: msg.callWorkflowsToValidate, Expected: 'allWorkflowsToValidate is: '},
  {Name: 'cDuplicateWorkflowCountIs', Actual: msg.cDuplicateWorkflowCountIs, Expected: 'Duplicate workflow count is: '},
  {Name: 'cDuplicateWorkflowNameIs', Actual: msg.cDuplicateWorkflowNameIs, Expected: 'Duplicate workflow name is: '},
  // Themes
  {Name: 'cthemesNamesIs', Actual: msg.cthemesNamesIs, Expected: 'themesNames is: '},
  {Name: 'cthemeNameIs', Actual: msg.cthemeNameIs, Expected: 'themeName is: '},
  {Name: 'cthemePathIs', Actual: msg.cthemePathIs, Expected: 'themePath is: '},
  {Name: 'cthemesListIs', Actual: msg.cthemesListIs, Expected: 'themesList is: '},
  {Name: 'cthemeDataIs', Actual: msg.cthemeDataIs, Expected: 'themeData is: '},
  {Name: 'cthemeConfigPathNameIs', Actual: msg.cthemeConfigPathNameIs, Expected: 'themeConfigPathName is: '},
  {Name: 'cthemeConfigFilesToLoadIs', Actual: msg.cthemeConfigFilesToLoadIs, Expected: 'themeConfigFilesToLoad is: '},
  {Name: 'cdesiredThemeNameIs', Actual: msg.cdesiredThemeNameIs, Expected: 'desiredThemeName is: '},
  {Name: 'cnamedThemePathIsVerified', Actual: msg.cnamedThemePathIsVerified, Expected: 'namedThemePath is verified: '},
  {Name: 'cloadedThemeDataIs', Actual: msg.cloadedThemeDataIs, Expected: 'loadedThemeData is: '},
  {Name: 'cErrorLineIsNullOrUndefined', Actual: msg.cErrorLineIsNullOrUndefined, Expected: 'ERROR: line is null or undefined: '},
  {Name: 'cSpaceFileIs', Actual: msg.cSpaceFileIs, Expected: ' file is: '},
  {Name: 'cthemesDataIs', Actual: msg.cthemesDataIs, Expected: 'themesData is: '},
  {Name: 'capplicationThemesIs', Actual: msg.capplicationThemesIs, Expected: 'applicationThemes is: '},
  {Name: 'cthemesRootPathIs', Actual: msg.cthemesRootPathIs, Expected: 'themesRootPath is: '},
  {Name: 'cframeworkThemeDataIs', Actual: msg.cframeworkThemeDataIs, Expected: 'frameworkThemeData is: '},
  {Name: 'capplicationThemesPathIs', Actual: msg.capplicationThemesPathIs, Expected: 'applicationThemesPath is: '},
  {Name: 'capplicationThemeDataIs', Actual: msg.capplicationThemeDataIs, Expected: 'applicationThemeData is: '},
  // Plugin specific
  {Name: 'cconfigFilesPathIs', Actual: msg.cconfigFilesPathIs, Expected: 'configFilesPath is: '},
  {Name: 'chighLevelPluginSystemConfigurationContainerIs', Actual: msg.chighLevelPluginSystemConfigurationContainerIs, Expected: 'highLevelPluginSystemConfigurationContainer is: '},
  {Name: 'chighLevelPluginDebugConfigurationContainerIs', Actual: msg.chighLevelPluginDebugConfigurationContainerIs, Expected: 'highLevelPluginDebugConfigurationContainer is: '},
  {Name: 'cfullyQualifiedNameIs', Actual: msg.cfullyQualifiedNameIs, Expected: 'fullyQualifiedName is: '},
  {Name: 'cnameIs', Actual: msg.cnameIs, Expected: 'name is: '},
  {Name: 'cpluginIs', Actual: msg.cpluginIs, Expected: 'plugin is: '},
  {Name: 'cnamespaceIs', Actual: msg.cnamespaceIs, Expected: 'namespace is: '},
  {Name: 'cValueBeforeRuleProcessingIs', Actual: msg.cValueBeforeRuleProcessingIs, Expected: 'value BEFORE rule processing is: '},
  {Name: 'cValueAfterRuleProcessingIs', Actual: msg.cValueAfterRuleProcessingIs, Expected: 'value AFTER rule processing is: '},
  {Name: 'creturnDataAfterObjectAssignIs', Actual: msg.creturnDataAfterObjectAssignIs, Expected: 'returnData after object.assign is: '},
  {Name: 'cbeginProcessingHighLevelPluginSystemConfigurationContainer', Actual: msg.cbeginProcessingHighLevelPluginSystemConfigurationContainer, Expected: 'begin processing highLevelPluginSystemConfigurationContainer'},
  {Name: 'cendProcessingHighLevelPluginSystemConfigurationContainer', Actual: msg.cendProcessingHighLevelPluginSystemConfigurationContainer, Expected: 'end processing highLevelPluginSystemConfigurationContainer'},
  {Name: 'cbeginProcessingHighLevelPluginDebugConfigurationContainer', Actual: msg.cbeginProcessingHighLevelPluginDebugConfigurationContainer, Expected: 'begin processing highLevelPluginDebugConfigurationContainer'},
  {Name: 'cendProcessingHighLevelPluginDebugConfigurationContainer', Actual: msg.cendProcessingHighLevelPluginDebugConfigurationContainer, Expected: 'end processing highLevelPluginDebugConfigurationContainer'},
  {Name: 'cpluginBusinessRulesIs', Actual: msg.cpluginBusinessRulesIs, Expected: 'pluginBusinessRules is: '},
  {Name: 'cplguinCommandsIs', Actual: msg.cplguinCommandsIs, Expected: 'pluginCommands is: '},
  {Name: 'cpluginConfigurationDataIs', Actual: msg.cpluginConfigurationDataIs, Expected: 'pluginConfigurationData is: '},
  {Name: 'cpluginCommandAliasesIs', Actual: msg.cpluginCommandAliasesIs, Expected: 'pluginCommandAliases is: '},
  {Name: 'cpluginWorkflowsIs', Actual: msg.cpluginWorkflowsIs, Expected: 'pluginWorkflows is: '},
  {Name: 'cpluginConstansValidationIs', Actual: msg.cpluginConstansValidationIs, Expected: 'pluginConstantsValidation is: '},
  {Name: 'cpluginThemeDataIs', Actual: msg.cpluginThemeDataIs, Expected: 'pluginThemeData is: '},
  {Name: 'cpluginNameArrayIs', Actual: msg.cpluginNameArrayIs, Expected: 'pluginNameArray is: '},
  {Name: 'cconstantsFilePathNamesIs', Actual: msg.cconstantsFilePathNamesIs, Expected: 'constantsFilePathName is: '},
  {Name: 'cconstantsFilePathValueIs', Actual: msg.cconstantsFilePathValueIs, Expected: 'constantsFilePathValue is: '},
  {Name: 'cnewPluginConstantValidationNameIs', Actual: msg.cnewPluginConstantValidationNameIs, Expected: 'newPluginConstantValidationName is: '},
  {Name: 'cpluginObjectIs', Actual: msg.cpluginObjectIs, Expected: 'pluginObject is: '},
  {Name: 'cpluginParentObjectIs', Actual: msg.cpluginParentObjectIs, Expected: 'pluginParentObject is: '},
  {Name: 'cpluginBusinessRuleConstValidationObjectIs', Actual: msg.cpluginBusinessRuleConstValidationObjectIs, Expected: 'pluginBusinessRuleConstValidationObject is: '},
  {Name: 'cpluginCommandsConstValidationObjectIs', Actual: msg.cpluginCommandsConstValidationObjectIs, Expected: 'pluginCommandsConstValidationObject is: '},
  {Name: 'cloadedPlugin', Actual: msg.cloadedPlugin, Expected: 'loaded plugin: '},
  {Name: 'cpluginsLoadedListIs', Actual: msg.cpluginsLoadedListIs, Expected: 'pluginsLoadedList is: '},
  {Name: 'cpluginLoadedKeyIs', Actual: msg.cpluginLoadedKeyIs, Expected: 'pluginLoadedKey is: '},
  {Name: 'cpluginLoadedEntryIs', Actual: msg.cpluginLoadedEntryIs, Expected: 'pluginLoadedEntry is: '},
  {Name: 'cpluginLoadedEntryNameIs', Actual: msg.cpluginLoadedEntryNameIs, Expected: 'pluginLoadedEntry name is: '},
  {Name: 'clistAllLoadedPluginsMessage01', Actual: msg.clistAllLoadedPluginsMessage01, Expected: 'List of loaded plugins is: '},
  {Name: 'clistOfPluginsInRegistryIs', Actual: msg.clistOfPluginsInRegistryIs, Expected: 'List of plugins in registry is: '},
  {Name: 'cpluginListArrayIs', Actual: msg.cpluginListArrayIs, Expected: 'pluginListArray is: '},
  {Name: 'cpluginsListArrayIs', Actual: msg.cpluginsListArrayIs, Expected: 'pluginsListArray is: '},
  {Name: 'caccumulatorPluginRegistryIs', Actual: msg.caccumulatorPluginRegistryIs, Expected: 'accumulatorPluginRegistry is: '},
  {Name: 'cprefixPluginPathIs', Actual: msg.cprefixPluginPathIs, Expected: 'prefixPluginPath is: '},
  {Name: 'cformatStringIs', Actual: msg.cformatStringIs, Expected: 'formatString is: '},
  {Name: 'cmessageIs', Actual: msg.cmessageIs, Expected: 'message is: '},
  {Name: 'cerrorIs', Actual: msg.cerrorIs, Expected: 'error is: '},
  {Name: 'cwarningIs', Actual: msg.cwarningIs, Expected: 'warning is: '},
  {Name: 'ccodeIs', Actual: msg.ccodeIs, Expected: 'code is: '},
  {Name: 'csignalIs', Actual: msg.csignalIs, Expected: 'signal is: '},
  {Name: 'cpluginCommandAliasesPathIs', Actual: msg.cpluginCommandAliasesPathIs, Expected: 'pluginCommandAliasesPath is: '},
  {Name: 'cpluginWorkflowsPathIs', Actual: msg.cpluginWorkflowsPathIs, Expected: 'pluginWorkflowsPath is: '},
  {Name: 'cpluginThemesPathIs', Actual: msg.cpluginThemesPathIs, Expected: 'pluginThemesPath is: '},
  {Name: 'cpluginCommandAliasesDataIs', Actual: msg.cpluginCommandAliasesDataIs, Expected: 'pluginCommandAliasesData is: '},
  {Name: 'cpluginWorkflowsDataIs', Actual: msg.cpluginWorkflowsDataIs, Expected: 'pluginWorkflowsData is: '},
  {Name: 'cpluginThemesDataIs', Actual: msg.cpluginThemesDataIs, Expected: 'pluginThemesData is: '},
  {Name: 'chaystacksConfigDataIs', Actual: msg.chaystacksConfigDataIs, Expected: 'haystacksConfigData is: '},
  {Name: 'clogFileIs', Actual: msg.clogFileIs, Expected: 'logFile is: '},
  {Name: 'copenFileSyncMessage', Actual: msg.copenFileSyncMessage, Expected: 'open the file sync: '},
  {Name: 'cappendFileSyncMessage', Actual: msg.cappendFileSyncMessage, Expected: 'append to the file sync: '},
  {Name: 'cDoneAppendingToFileMessage', Actual: msg.cDoneAppendingToFileMessage, Expected: 'DONE appending to the file: '},
  {Name: 'caliasesPathIs', Actual: msg.caliasesPathIs, Expected: 'aliasesPath is: '},
  {Name: 'cworkflowsPathIs', Actual: msg.cworkflowsPathIs, Expected: 'workflowsPath is: '},
  {Name: 'cthemesPathIs', Actual: msg.cthemesPathIs, Expected: 'themesPath is: '},
  {Name: 'cpluginCodeRootPathIs', Actual: msg.cpluginCodeRootPathIs, Expected: 'pluginCodeRootPath is: '},
  {Name: 'cpluginRootPathIs', Actual: msg.cpluginRootPathIs, Expected: 'pluginRootPath is: '},
  {Name: 'cpluginReleaseResourcesPathIs', Actual: msg.cpluginReleaseResourcesPathIs, Expected: 'pluginReleaseResourcesPath is: '},
  {Name: 'cfilesToLoadIsValid', Actual: msg.cfilesToLoadIsValid, Expected: 'filesToLoad is valid'},
  {Name: 'cpluginsFromPathArrayIs', Actual: msg.cpluginsFromPathArrayIs, Expected: 'pluginsFromPathArray is: '},

  {Name: 'cCaptureSessionDateTimeStampLogFileName', Actual: msg.cCaptureSessionDateTimeStampLogFileName, Expected: 'Capture the session date-time-stamp so we can determine a log file name.'},
  {Name: 'cProcessRulesWarningSomeRulesDoNotExist', Actual: msg.cProcessRulesWarningSomeRulesDoNotExist, Expected: 'WARNING: Some rules do not exist: '},
  // WARNING: Mixed string. Cannot determine what delimiter should be used to break up the string into words.
  {Name: 'cDetermineWordDelimiterMessage1', Actual: msg.cDetermineWordDelimiterMessage1, Expected: 'WARNING: Mixed string. '},
  {Name: 'cDetermineWordDelimiterMessage2', Actual: msg.cDetermineWordDelimiterMessage2, Expected: 'Cannot determine what delimiter should '},
  {Name: 'cDetermineWordDelimiterMessage3', Actual: msg.cDetermineWordDelimiterMessage3, Expected: 'be used to break up the '},
  {Name: 'cDetermineWordDelimiterMessage4', Actual: msg.cDetermineWordDelimiterMessage4, Expected: 'string into words.'},
  // WARNING: Mixed string. Cannot determine how words are delimited in the string. Unable to count words.
  {Name: 'cGetWordCountInStringMessage1', Actual: msg.cGetWordCountInStringMessage1, Expected: 'WARNING: Mixed string. '},
  {Name: 'cGetWordCountInStringMessage2', Actual: msg.cGetWordCountInStringMessage2, Expected: 'Cannot determine how words are delimited '},
  {Name: 'cGetWordCountInStringMessage3', Actual: msg.cGetWordCountInStringMessage3, Expected: 'in the string. Unable to count words.'},
  // WARNING: Mixed string. Cannot get words from the string. Unable to determine words.
  {Name: 'cGetWordsArrayFromStringMessage1', Actual: msg.cGetWordsArrayFromStringMessage1, Expected: 'WARNING: Mixed string. '},
  {Name: 'cGetWordsArrayFromStringMessage2', Actual: msg.cGetWordsArrayFromStringMessage2, Expected: 'Cannot get words from the string. '},
  {Name: 'cGetWordsArrayFromStringMessage3', Actual: msg.cGetWordsArrayFromStringMessage3, Expected: 'Unable to determine words.'},
  // Please enter a named command where the first word starts with a lower case letter and all other words in the named command start with an upper case letter:
  {Name: 'cCommandNamePrompt1', Actual: msg.cCommandNamePrompt1, Expected: 'Please enter a named command where '},
  {Name: 'cCommandNamePrompt2', Actual: msg.cCommandNamePrompt2, Expected: 'the first word starts with a '},
  {Name: 'cCommandNamePrompt3', Actual: msg.cCommandNamePrompt3, Expected: 'lower case letter and all other '},
  {Name: 'cCommandNamePrompt4', Actual: msg.cCommandNamePrompt4, Expected: 'words in the named command start '},
  {Name: 'cCommandNamePrompt5', Actual: msg.cCommandNamePrompt5, Expected: 'with an upper case letter: '},
  // Please enter a list of command for the command word:
  {Name: 'cCommandWordAliasPrompt1', Actual: msg.cCommandWordAliasPrompt1, Expected: 'Please enter a list of command '},
  {Name: 'cCommandWordAliasPrompt2', Actual: msg.cCommandWordAliasPrompt2, Expected: 'word abreviations/acronyms/aliases '},
  {Name: 'cCommandWordAliasPrompt3', Actual: msg.cCommandWordAliasPrompt3, Expected: 'for the command word: '},
  // Please enter a string you would like to define as a constant in the constants system:
  {Name: 'cConstantPrompt1', Actual: msg.cConstantPrompt1, Expected: 'Please enter a string you would '},
  {Name: 'cConstantPrompt2', Actual: msg.cConstantPrompt2, Expected: 'like to define as a constant '},
  {Name: 'cConstantPrompt3', Actual: msg.cConstantPrompt3, Expected: 'in the constants system: '},
  // Please enter a coma separated list of strings you would like to define in the constants system:
  {Name: 'cConstantsListPrompt1', Actual: msg.cConstantsListPrompt1, Expected: 'Please enter a coma separated list of '},
  {Name: 'cConstantsListPrompt2', Actual: msg.cConstantsListPrompt2, Expected: 'strings you would like to define in '},
  {Name: 'cConstantsListPrompt3', Actual: msg.cConstantsListPrompt3, Expected: 'the constants system: '},
  // Please enter a coma separated list of strings you would like to search for common patterns:
  {Name: 'cConstantsListPatternSearchPrompt1', Actual: msg.cConstantsListPatternSearchPrompt1, Expected: 'Please enter a coma separated list of '},
  {Name: 'cConstantsListPatternSearchPrompt2', Actual: msg.cConstantsListPatternSearchPrompt2, Expected: 'strings you would like to search for '},
  {Name: 'cConstantsListPatternSearchPrompt3', Actual: msg.cConstantsListPatternSearchPrompt3, Expected: 'common patterns: '},
  // ERROR: Attempted to generate a suggested line of code to validate the constant, ' +
  // 'but the constant is not formatted correctly, it should begin with a lower case "c". ' +
  // 'Please reformat the constant correctly so a line of code can be generated for you.
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage1', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage1, Expected: 'ERROR: Attempted to generate a suggested '},
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage2', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage2, Expected: 'line of code to validate the constant, '},
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage3', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage3, Expected: 'but the constant is not formatted correctly, '},
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage4', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage4, Expected: 'it should begin with a lower case "c". '},
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage5', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage5, Expected: 'Please reformat the constant correctly so a '},
  {Name: 'cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage6', Actual: msg.cDetermineSuggestedConstantsValidationLineOfCodeErrorMessage6, Expected: 'line of code can be generated for you.'},
  {Name: 'cSearchForPatternsInStringArrayMessage1', Actual: msg.cSearchForPatternsInStringArrayMessage1, Expected: 'currentMasterStringArrayElement does not contain a space character'},
  {Name: 'cSearchForPatternsInStringArrayMessage2', Actual: msg.cSearchForPatternsInStringArrayMessage2, Expected: 'length of string to compare is: '},
  {Name: 'cSearchForPatternsInStringArrayMessage3', Actual: msg.cSearchForPatternsInStringArrayMessage3, Expected: 'length of currentMasterStringArrayElement is: '},
  {Name: 'cSearchForPatternsInStringArrayMessage4', Actual: msg.cSearchForPatternsInStringArrayMessage4, Expected: 'PUSHING a new constant pattern to the output array: '},
  // WARNING: The current string being searched contains a space character, we are going to skip comparison.
  {Name: 'cSearchForPatternsInStringArrayMessage5', Actual: msg.cSearchForPatternsInStringArrayMessage5, Expected: 'WARNING: The current string being searched contains a space character, '},
  {Name: 'cSearchForPatternsInStringArrayMessage6', Actual: msg.cSearchForPatternsInStringArrayMessage6, Expected: 'we are going to skip comparison.'},
  {Name: 'cSearchForPatternsInStringArrayMessage7', Actual: msg.cSearchForPatternsInStringArrayMessage7, Expected: 'WARNING: InputData was not an array or had an empty array.'},
  // WARNING: No data to load, please specify a valid path & filename!
  {Name: 'cLoadDataFileMessage1', Actual: msg.cLoadDataFileMessage1, Expected: 'WARNING: No data to load, '},
  {Name: 'cloadDataFileMessage2', Actual: msg.cloadDataFileMessage2, Expected: 'please specify a valid path & filename!'},
  {Name: 'cloadDataFileMessage3', Actual: msg.cloadDataFileMessage3, Expected: 'WARNING: Invalid file format, file formats supported are: '},
  {Name: 'csaveDataFileMessage1', Actual: msg.csaveDataFileMessage1, Expected: 'WARNING: No data to save, '},
  {Name: 'ccommandSequencerMessage1', Actual: msg.ccommandSequencerMessage1, Expected: 'WARNING: advanced.commandSequencer: The specified command was not found, '},
  {Name: 'ccommandSequencerMessage2', Actual: msg.ccommandSequencerMessage2, Expected: 'please enter a valid command and try again.'},
  {Name: 'cworkflowMessage1', Actual: msg.cworkflowMessage1, Expected: 'WARNING: advanced.workflow: The specified workflow: '},
  {Name: 'cworkflowMessage2', Actual: msg.cworkflowMessage2, Expected: ' was not found in either the system defined workflows, or client defined workflows.'},
  {Name: 'cworkflowMessage3', Actual: msg.cworkflowMessage3, Expected: ' Please enter a valid workflow name and try again.'},
  {Name: 'ccommandGeneratorMessage1', Actual: msg.ccommandGeneratorMessage1, Expected: 'After attempting to replace the secondaryCommandArgsDelimiter with the primaryCommandDelimiter commandString is: '},
  {Name: 'ccommandGeneratorMessage2', Actual: msg.ccommandGeneratorMessage2, Expected: 'After attempting to replace the tertiaryCommandDelimiter with the secondaryCommandArgsDelimiter commandString is: '},
  {Name: 'ccommandGeneratorMessage3', Actual: msg.ccommandGeneratorMessage3, Expected: 'WARNING: advanced.commandGenerator: Must enter a number greater than 0, number entered: '},
  {Name: 'ccommandGeneratorMessage4', Actual: msg.ccommandGeneratorMessage4, Expected: 'WARNING: advanced.commandGenerator: Number entered for the number of commands to generate is not a number: '},
  {Name: 'ccommandGeneratorMessage5', Actual: msg.ccommandGeneratorMessage5, Expected: 'WARNING: advanced.commandGenerator: The specified command: '},
  {Name: 'ccommandGeneratorMessage6', Actual: msg.ccommandGeneratorMessage6, Expected: ' was not found, please enter a valid command and try again.'},
  {Name: 'ccommandAliasGeneratorMessage1', Actual: msg.ccommandAliasGeneratorMessage1, Expected: 'Command can be called by passing parameters and bypass the prompt system.'},
  {Name: 'ccommandAliasGeneratorMessage2', Actual: msg.ccommandAliasGeneratorMessage2, Expected: 'EXAMPLE: {"constants":"c,const","Generator":"g,gen,genrtr","List":"l,lst"}'},
  {Name: 'ccommandAliasGeneratorMessage3', Actual: msg.ccommandAliasGeneratorMessage3, Expected: 'INVALID INPUT: Please enter a valid camel-case command name.'},
  {Name: 'ccommandAliasGeneratorMessage4', Actual: msg.ccommandAliasGeneratorMessage4, Expected: 'INVALID INPUT: Please enter a valid command word alias list.'},
  {Name: 'ccommandAliasGeneratorMessage5', Actual: msg.ccommandAliasGeneratorMessage5, Expected: 'INVALID COMMAND INPUT: Please enter valid command data when trying to call with parameters.'},
  {Name: 'cconstantsGeneratorMessage1', Actual: msg.cconstantsGeneratorMessage1, Expected: 'INVALID INPUT: Please enter a valid constant value that contains more than 4 characters.'},
  {Name: 'cconstantsGeneratorMessage2', Actual: msg.cconstantsGeneratorMessage2, Expected: 'WARNING: The constant has already been defined in the following library(ies): '},
  {Name: 'cconstantsGeneratorMessage3', Actual: msg.cconstantsGeneratorMessage3, Expected: 'The enableConstantsValidation flag is disabled. '},
  {Name: 'cconstantsGeneratorMessage4', Actual: msg.cconstantsGeneratorMessage4, Expected: 'Enable this flag in the configuration settings to activate this command.'},
  {Name: 'cconstantsGeneratorListMessage1', Actual: msg.cconstantsGeneratorListMessage1, Expected: 'INVALID INPUT: Please enter a valid constant list.'},
  {Name: 'cvalidateCommandAliasesMessage1', Actual: msg.cvalidateCommandAliasesMessage1, Expected: 'PASSED: All duplicate command aliases validation tests!'},
  {Name: 'cgetCommandArgsMessage1', Actual: msg.cgetCommandArgsMessage1, Expected: 'About to call the rule broker to process on the number of single quotes '},
  {Name: 'cgetCommandArgsMessage2', Actual: msg.cgetCommandArgsMessage2, Expected: 'and determine if it-be even or odd'},
  {Name: 'cexecuteCommandMessage1', Actual: msg.cexecuteCommandMessage1, Expected: 'WARNING: Command does not exist, please enter a valid command and try again!'},
  {Name: 'cparseBusinessRuleArgumentMessage1', Actual: msg.cparseBusinessRuleArgumentMessage1, Expected: 'WARNING: lexical.parseBusinessRuleArgument: Invalid combination of inputs to the lexical.parseBusinessRuleArgument function! '},
  {Name: 'cparseBusinessRuleArgumentMessage2', Actual: msg.cparseBusinessRuleArgumentMessage2, Expected: 'Please adjust inputs and try again.'},
  {Name: 'cprintDataHiveAttributesMessage1', Actual: msg.cprintDataHiveAttributesMessage1, Expected: 'Caught the case the user may have only specified a single data hive, '},
  {Name: 'cprintDataHiveAttributesMessage2', Actual: msg.cprintDataHiveAttributesMessage2, Expected: 'such as the configuration data hive.'},
  {Name: 'cprintDataHiveAttributesMessage3', Actual: msg.cprintDataHiveAttributesMessage3, Expected: 'ERROR: Please enter a valid name.space.attributeName for the system to print out attribute data from.'},
  {Name: 'cNothingToEcho', Actual: msg.cNothingToEcho, Expected: 'Nothing to echo.'},
  {Name: 'cDidNotFindAnyMatchingStyleLogicPattern', Actual: msg.cDidNotFindAnyMatchingStyleLogicPattern, Expected: 'ERROR: Did not find any matching style logic pattern!'},
  {Name: 'cchangeSettingError01', Actual: msg.cchangeSettingError01, Expected: 'ERROR: changeSetting command, invalid entry: '},
  {Name: 'cchangeSettingError02', Actual: msg.cchangeSettingError02, Expected: 'Please enter a fully qualified path to a data property in the system,'},
  {Name: 'cchangeSettingError03', Actual: msg.cchangeSettingError03, Expected: 'and a value that you would like to assign to that data property.'},
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  // Workflow messages
  {Name: 'cgetAllWorkflowsMessage01', Actual: msg.cgetAllWorkflowsMessage01, Expected: 'The recursive call returned false, '},
  {Name: 'cgetAllWorkflowsMessage02', Actual: msg.cgetAllWorkflowsMessage02, Expected: 'so push the current entity to the output array!'},
  {Name: 'cgetAllWorkflowsMessage03', Actual: msg.cgetAllWorkflowsMessage03, Expected: 'workflowEntity is NOT an object type, '},
  {Name: 'cgetAllWorkflowsMessage04', Actual: msg.cgetAllWorkflowsMessage04, Expected: 'so push it to the output array!'},
  {Name: 'cworkfowHelpMessage01', Actual: msg.cworkfowHelpMessage01, Expected: 'calling getWorkflowNamespaceDataObject() function, '},
  {Name: 'cworkfowHelpMessage02', Actual: msg.cworkfowHelpMessage02, Expected: 'because the user entered some namespace we should look for!'},
  {Name: 'cworkfowHelpMessage03', Actual: msg.cworkfowHelpMessage03, Expected: 'NOW call getAllWorkflows with the above found data!'},
  {Name: 'cworkfowHelpMessage04', Actual: msg.cworkfowHelpMessage04, Expected: 'User did not enter any parameters, '},
  {Name: 'cworkfowHelpMessage05', Actual: msg.cworkfowHelpMessage05, Expected: 'just call getAllWorkflows functions with no input, '},
  {Name: 'cworkfowHelpMessage06', Actual: msg.cworkfowHelpMessage06, Expected: 'will return all and print all.'},
  {Name: 'cprocessXmlLeafNodeMessage01', Actual: msg.cprocessXmlLeafNodeMessage01, Expected: 'property is not a Workflow, '},
  {Name: 'cprocessXmlLeafNodeMessage02', Actual: msg.cprocessXmlLeafNodeMessage02, Expected: 'so call processXmlLeafNode() recursively!'},
  {Name: 'cobjectDeepMergeMessage01', Actual: msg.cobjectDeepMergeMessage01, Expected: 'property is in inputData'},
  {Name: 'cobjectDeepMergeMessage02', Actual: msg.cobjectDeepMergeMessage02, Expected: 'inputData[property] is not an object!'},
  {Name: 'cobjectDeepMergeMessage03', Actual: msg.cobjectDeepMergeMessage03, Expected: 'Assign it directly.'},
  {Name: 'cobjectDeepMergeMessage04', Actual: msg.cobjectDeepMergeMessage04, Expected: 'inputData[property] is an object!'},
  {Name: 'cobjectDeepMergeMessage05', Actual: msg.cobjectDeepMergeMessage05, Expected: 'inputMetaData[property] is not an object, '},
  {Name: 'cobjectDeepMergeMessage06', Actual: msg.cobjectDeepMergeMessage06, Expected: 'inputMetaData[property] is an object.'},
  {Name: 'cobjectDeepMergeMessage07', Actual: msg.cobjectDeepMergeMessage07, Expected: 'Array lengths are the same at this level.'},
  {Name: 'cobjectDeepMergeMessage08', Actual: msg.cobjectDeepMergeMessage08, Expected: 'Two arrays get concatenated.'},
  {Name: 'cobjectDeepMergeMessage09', Actual: msg.cobjectDeepMergeMessage09, Expected: 'Two objects get merged recursively.'},
  {Name: 'cobjectDeepMergeMessage10', Actual: msg.cobjectDeepMergeMessage10, Expected: 'property is not in inputData, '},
  {Name: 'cobjectDeepMergeMessage11', Actual: msg.cobjectDeepMergeMessage11, Expected: 'so add it directly.'},
  {Name: 'chelpCommandMessage01', Actual: msg.chelpCommandMessage01, Expected: 'ERROR: The command namespace was not found.'},
  {Name: 'chelpCommandMessage02', Actual: msg.chelpCommandMessage02, Expected: 'Please make sure you have entered the correct name and try again.'},
  {Name: 'chelpCommandMessage03', Actual: msg.chelpCommandMessage03, Expected: 'NOW call getAllCommandAliasData with the above found data!'},
  {Name: 'cworkflowHelpCommandMessage01', Actual: msg.cworkflowHelpCommandMessage01, Expected: 'ERROR: The workflow namespace was not found.'},
  {Name: 'cFoundMatchingAliasEntry1', Actual: msg.cFoundMatchingAliasEntry1, Expected: 'Found a matching alias entry! 1'},
  {Name: 'cFoundMatchingAliasEntry2', Actual: msg.cFoundMatchingAliasEntry2, Expected: 'Found a matching alias entry! 2'},
  {Name: 'cgetAllCommandAliasDataMessage01', Actual: msg.cgetAllCommandAliasDataMessage01, Expected: 'internalCommandAliasDataStructure[commandAliasEntity] is of type object!'},
  {Name: 'cgetAllCommandAliasDataMessage02', Actual: msg.cgetAllCommandAliasDataMessage02, Expected: 'The recursive call returned false, so push the current entity to the output array!'},
  {Name: 'cevaluateConstantMessage01', Actual: msg.cevaluateConstantMessage01, Expected: 'ERROR: No constant value entered, please enter a constant name to evaluate.'},
  {Name: 'cvalidateWorkflowsMessage01', Actual: msg.cvalidateWorkflowsMessage01, Expected: 'PASSED: All duplicate workflow validation tests!'},
  {Name: 'cchangeConfigurationSettingMessage01', Actual: msg.cchangeConfigurationSettingMessage01, Expected: 'ERROR: Invalid entry, please enter a valid configuration namespace to change, '},
  {Name: 'cchangeConfigurationSettingMessage02', Actual: msg.cchangeConfigurationSettingMessage02, Expected: 'and a value to assign to the configuration setting.'},
  {Name: 'cchangeConfigurationSettingMessage03', Actual: msg.cchangeConfigurationSettingMessage03, Expected: 'EXAMPLE: changeConfigurationSetting debugSetting.businessRules.rules.arrayParsing.commandArrayParsing.solveLehmerCode true'},
  {Name: 'cchangeDebugConfigurationThemeMessage01', Actual: msg.cchangeDebugConfigurationThemeMessage01, Expected: 'ERROR: There was an error applying the selected theme to the active debug settings configuration.'},
  {Name: 'cchangeDebugConfigurationThemeMessage02', Actual: msg.cchangeDebugConfigurationThemeMessage02, Expected: 'ERROR: The specified theme name was not found in the current list of supported themes.'},
  {Name: 'cchangeDebugConfigurationThemeMessage03', Actual: msg.cchangeDebugConfigurationThemeMessage03, Expected: 'You can find the available themes at the following path location: '},
  {Name: 'cchangeDebugConfigurationThemeMessage04', Actual: msg.cchangeDebugConfigurationThemeMessage04, Expected: 'ERROR: Invalid entry, please enter a theme name you would like the debug settings to switch to when logging debug statements.'},
  {Name: 'cchangeDebugConfigurationThemeMessage05', Actual: msg.cchangeDebugConfigurationThemeMessage05, Expected: 'EXAMPLE: changeDebugConfigurationTheme Skywalker'},
  {Name: 'cErrorAddThemeDataMessage01', Actual: msg.cErrorAddThemeDataMessage01, Expected: 'ERROR: Failure to merge the theme data for: '},
  ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  {Name: 'cprompt01', Actual: msg.cprompt01, Expected: 'Caught the case that the input string contains the global carriage return term.'},
  {Name: 'cprompt02', Actual: msg.cprompt02, Expected: 'index of the carriage return character: '},
  {Name: 'cprompt03', Actual: msg.cprompt03, Expected: 'Caught the case that the string includes a carriage return and new line characters.'},
  {Name: 'cprintMessageToFile01', Actual: msg.cprintMessageToFile01, Expected: '!file.includes(undefined)'},
  {Name: 'cprintMessageToFile02', Actual: msg.cprintMessageToFile02, Expected: 'ERROR: Failure to log to file: '},
  {Name: 'cprintMessageToFile03', Actual: msg.cprintMessageToFile03, Expected: 'ERROR: Log File includes undefined.'},
  {Name: 'cWarningQueue', Actual: msg.cWarningQueue, Expected: 'WARNING: Queue: '},
  {Name: 'cextractAndProcessPluginEntryPointUriMessage01', Actual: msg.cextractAndProcessPluginEntryPointUriMessage01, Expected: 'pluginMainPath before join is: '},
  {Name: 'cextractAndProcessPluginEntryPointUriMessage02', Actual: msg.cextractAndProcessPluginEntryPointUriMessage02, Expected: 'pluginMainPath after join is: '},
  {Name: 'cextractAndProcessPluginEntryPointUriMessage03', Actual: msg.cextractAndProcessPluginEntryPointUriMessage03, Expected: 'pluginMainPath URI is: '},
  {Name: 'cextractAndProcessPluginEntryPointUriMessage04', Actual: msg.cextractAndProcessPluginEntryPointUriMessage04, Expected: 'ERROR: No plugin meta data or plugin path are specified: '},
  {Name: 'cstorePluginRegistryInDataStoreMessage01', Actual: msg.cstorePluginRegistryInDataStoreMessage01, Expected: 'ERROR: There was a problem saving the registry data to the plugin registry in the d-data structure: '},
  {Name: 'cErrorRegisterPluginMessage01', Actual: msg.cErrorRegisterPluginMessage01, Expected: 'ERROR: Failure to register plugin: '},
  {Name: 'cErrorUnRegisterPluginMessage01', Actual: msg.cErrorUnRegisterPluginMessage01, Expected: 'ERROR: Failure to unregister plugin: '},
  {Name: 'cErrorUnregisterAllPluginsMessage01', Actual: msg.cErrorUnregisterAllPluginsMessage01, Expected: 'ERROR: Could not unregister all of the plugins.'},
  {Name: 'cErrorSavePluginRegistryMessage01', Actual: msg.cErrorSavePluginRegistryMessage01, Expected: 'ERROR: Failure to write out the plugin registry to the plugin path specified by the application: '},
  {Name: 'cErrorSyncPluginRegistryWithPluginRegistryPathMessage01', Actual: msg.cErrorSyncPluginRegistryWithPluginRegistryPathMessage01, Expected: 'ERROR: Failure to synchronize the plugin registry with the list of plugins available from the plugins folder specified by the application in the plugins registry JSON file.'},
  {Name: 'cErrorLoadAllPluginsMetaDataMessage01', Actual: msg.cErrorLoadAllPluginsMetaDataMessage01, Expected: 'ERROR: No plugin paths provided, please provide paths and try again.'},
  {Name: 'cErrorLoadAllPluginsExecutionPathsMessage01', Actual: msg.cErrorLoadAllPluginsExecutionPathsMessage01, Expected: 'ERROR: No plugin meta data was found. Please ensure the correct path is provided and try again.'},
  {Name: 'cloadAllPluginsMessage01', Actual: msg.cloadAllPluginsMessage01, Expected: ' Failed to load the plugin: '},
  {Name: 'cloadAllPluginsMessage02', Actual: msg.cloadAllPluginsMessage02, Expected: 'plugin entry point path: '},
  {Name: 'cloadAllPluginsMessage03', Actual: msg.cloadAllPluginsMessage03, Expected: 'ERROR: No plugin execution paths or plugins metaData was specified: '},
  {Name: 'cErrorRegisterPluginCommandMessage01', Actual: msg.cErrorRegisterPluginCommandMessage01, Expected: 'ERROR: Failure to register the specified plugin, invalid input: '},
  {Name: 'cErrorUnregisterPluginCommandMessage01', Actual: msg.cErrorUnregisterPluginCommandMessage01, Expected: 'ERROR: Failure to unregister the specified plugin, invalid input: '},
  {Name: 'cErrorLoadPluginCommandMessage01', Actual: msg.cErrorLoadPluginCommandMessage01, Expected: 'ERROR: Failure to load the specified plugin, invalid input: '},
  {Name: 'cErrorLoadPluginsCommandMessage01', Actual: msg.cErrorLoadPluginsCommandMessage01, Expected: 'ERROR: Failure to load the specified plugins, invalid input: '},
  {Name: 'cErrorUnloadPluginCommandMessage01', Actual: msg.cErrorUnloadPluginCommandMessage01, Expected: 'ERROR: Failure to unload the specified plugin, invalid input: '},
  {Name: 'cErrorUnloadPluginsCommandMessage01', Actual: msg.cErrorUnloadPluginsCommandMessage01, Expected: 'ERROR: Failure to unload the specified plugins, invalid input: '},
  {Name: 'cErrorListAllPluginsInRegistryCommandMessage01', Actual: msg.cErrorListAllPluginsInRegistryCommandMessage01, Expected: 'ERROR: There was an error getting the list of plugins from the registry.'},
  {Name: 'cErrorListAllPluginsInRegistryPathCommandMessage01', Actual: msg.cErrorListAllPluginsInRegistryPathCommandMessage01, Expected: 'ERROR: There was an error getting the list of plugins from the path listed in the plugin registry.'},
  {Name: 'cErrorCountPluginsInRegistryCommandMessage01', Actual: msg.cErrorCountPluginsInRegistryCommandMessage01, Expected: 'ERROR: There was an error getting the number of plugins in the plugin registry.'},
  {Name: 'cErrorCountPluginsInRegistryPathCommandMessage01', Actual: msg.cErrorCountPluginsInRegistryPathCommandMessage01, Expected: 'ERROR: There was an error getting the number of plugins in the path listed in the plugin registry.'},
  {Name: 'cErrorSyncPluginRegistryWithPathCommandMessage01', Actual: msg.cErrorSyncPluginRegistryWithPathCommandMessage01, Expected: 'ERROR: Failure to synchronize the plugin registry with the plugin path listed in the plugin registry.'},
  {Name: 'cErrorUnregisterAllPluginsCommandMessage01', Actual: msg.cErrorUnregisterAllPluginsCommandMessage01, Expected: 'ERROR: Failure to unregister all plugins.'},
  {Name: 'cErrorSavePluginRegistryToDiskCommandMessage01', Actual: msg.cErrorSavePluginRegistryToDiskCommandMessage01, Expected: 'ERROR: Failure to save the plugin registry to the hard drive.'},
  {Name: 'cErrorLoadPluginsFromRegistryCommandMessage01', Actual: msg.cErrorLoadPluginsFromRegistryCommandMessage01, Expected: 'ERROR: Failure to load the plugins from the plugin registry.'},
  {Name: 'cErrorUnloadAllPluginsCommandMessage01', Actual: msg.cErrorUnloadAllPluginsCommandMessage01, Expected: 'ERROR: Failure to unload all the plugins.'},
  {Name: 'cWarningDataPathConfigurationNameNotSupported', Actual: msg.cWarningDataPathConfigurationNameNotSupported, Expected: 'WARNING: dataPathConfigurationName not supported: '},
  {Name: 'cloadPluginResourceDataMessage01', Actual: msg.cloadPluginResourceDataMessage01, Expected: 'ERROR: Invalid data type specified: '},
  {Name: 'cErrorIntegrateAllPluginsDataMessage01', Actual: msg.cErrorIntegrateAllPluginsDataMessage01, Expected: 'ERROR: Invalid data input, unable to integrate all plugin data.'},
  {Name: 'cErrorIntegratePluginDataMessage01', Actual: msg.cErrorIntegratePluginDataMessage01, Expected: 'ERROR: Invalid input, either the plugin name or plugin data was undefined. Please provide valid data and try again.'},
  {Name: 'cErrorIntegratePluginDataMessage02', Actual: msg.cErrorIntegratePluginDataMessage02, Expected: 'ERROR: No plugin business rules data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage03', Actual: msg.cErrorIntegratePluginDataMessage03, Expected: 'ERROR: No plugin commands data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage04', Actual: msg.cErrorIntegratePluginDataMessage04, Expected: 'ERROR: No plugin configuration data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage05', Actual: msg.cErrorIntegratePluginDataMessage05, Expected: 'ERROR: No plugin command aliases data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage06', Actual: msg.cErrorIntegratePluginDataMessage06, Expected: 'ERROR: No plugin workflows data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage07', Actual: msg.cErrorIntegratePluginDataMessage07, Expected: 'ERROR: No plugin constants validation data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage08', Actual: msg.cErrorIntegratePluginDataMessage08, Expected: 'ERROR: No plugin themes data was loaded for the plugin: '},
  {Name: 'cErrorIntegratePluginDataMessage09', Actual: msg.cErrorIntegratePluginDataMessage09, Expected: 'ERROR: No plugin data was loaded at all for the plugin: '},
  {Name: 'cErrorAddPluginRulesMessage01', Actual: msg.cErrorAddPluginRulesMessage01, Expected: 'ERROR: Failure to merge the plugin rules for plugin: '},
  {Name: 'cErrorAddPluginCommandsMessage01', Actual: msg.cErrorAddPluginCommandsMessage01, Expected: 'ERROR: Failure to merge the plugin commands for plugin: '},
  {Name: 'cErrorAddPluginConfigurationDataMessage01', Actual: msg.cErrorAddPluginConfigurationDataMessage01, Expected: 'ERROR: Failure unable to persist the plugin configuration data for plugin: '},
  {Name: 'cErrorAddPluginCommandAliasesMessage01', Actual: msg.cErrorAddPluginCommandAliasesMessage01, Expected: 'ERROR: Failure to merge the plugin command aliases for plugin: '},
  {Name: 'cErrorAddPluginWorkflowsMessage01', Actual: msg.cErrorAddPluginWorkflowsMessage01, Expected: 'ERROR: Failure to merge the plugin workflows for plugin: '},
  {Name: 'cErrorAddConstantsValidationDataMessage01', Actual: msg.cErrorAddConstantsValidationDataMessage01, Expected: 'ERROR: Failure to merge the constants validation data for the type: '},
  {Name: 'cErrorLoadAsciiFileFromPathMessage01', Actual: msg.cErrorLoadAsciiFileFromPathMessage01, Expected: 'ERROR: Failure to read from file: '},
  {Name: 'cBeginProcessingAllLinesFromFile', Actual: msg.cBeginProcessingAllLinesFromFile, Expected: 'BEGIN processing all lines from file: '},
  {Name: 'cBeginProcessingLine', Actual: msg.cBeginProcessingLine, Expected: 'BEGIN processing a line'},
  {Name: 'cEndProcessingLine', Actual: msg.cEndProcessingLine, Expected: 'END processing a line'},
  {Name: 'cEndProcessingAllLinesFromFile', Actual: msg.cEndProcessingAllLinesFromFile, Expected: 'END processing all lines from file: '},
  {Name: 'cvalidateConstantsDataValidationLineItemNameErrorMessage1', Actual: msg.cvalidateConstantsDataValidationLineItemNameErrorMessage1, Expected: 'ERROR: Unable to find the constant namespace among all the constants validation data: '},
  {Name: 'cFoundMatchingNamespaceConstant', Actual: msg.cFoundMatchingNamespaceConstant, Expected: 'Found a matching namespace constant.'},
  {Name: 'cScanningConstantsValidationPhase1Message', Actual: msg.cScanningConstantsValidationPhase1Message, Expected: 'Scanning constants phase 1 validation data for file: '},
  {Name: 'cScanningConstantsValidationPhase2Message', Actual: msg.cScanningConstantsValidationPhase2Message, Expected: 'Scanning constants phase 2 validation data for: '},
  {Name: 'cdoesConstantExistMessage01', Actual: msg.cdoesConstantExistMessage01, Expected: 'Found a match with the application constants.'},
  {Name: 'cdoesConstantExistMessage02', Actual: msg.cdoesConstantExistMessage02, Expected: 'Found a match with the framework constants.'},
  {Name: 'cupperCaseLetterFound', Actual: msg.cupperCaseLetterFound, Expected: 'Upper case letter found.'},
  {Name: 'csingleQuoteSwapAfterEqualsMessage01', Actual: msg.csingleQuoteSwapAfterEqualsMessage01, Expected: 'inputData is an array! Capture the first element only.'},
  {Name: 'csingleQuoteSwapAfterEqualsMessage02', Actual: msg.csingleQuoteSwapAfterEqualsMessage02, Expected: 'inputData is a string input, use it as is.'},
  {Name: 'csingleQuoteSwapAfterEqualsMessage03', Actual: msg.csingleQuoteSwapAfterEqualsMessage03, Expected: 'First replace all the quotes in the string with double quotes.'},
  {Name: 'cloadConfigDataErrorMessage01', Actual: msg.cloadConfigDataErrorMessage01, Expected: 'FATAL ERROR: Unable to load the specified plugin config path, Haystacks framework data dependency failure: '},
  {Name: 'cloadConfigDataErrorMessage02', Actual: msg.cloadConfigDataErrorMessage02, Expected: 'FATAL ERROR: Unable to load the specified plugin, no Haystacks context data object.'},
  {Name: 'cloadConfigDataErrorMessage03', Actual: msg.cloadConfigDataErrorMessage03, Expected: 'FATAL ERROR: Unable to load the specified plugin, no config data for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage01', Actual: msg.cErrorUnloadPluginMessage01, Expected: 'ERROR: There was an error unloading the plugin: '},
  {Name: 'cErrorUnloadPluginMessage02', Actual: msg.cErrorUnloadPluginMessage02, Expected: 'ERROR: Failure to remove business rules for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage03', Actual: msg.cErrorUnloadPluginMessage03, Expected: 'ERROR: Failure to remove commands for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage04', Actual: msg.cErrorUnloadPluginMessage04, Expected: 'ERROR: Failure to remove configuration data for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage05', Actual: msg.cErrorUnloadPluginMessage05, Expected: 'ERROR: Failure to remove command aliases for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage06', Actual: msg.cErrorUnloadPluginMessage06, Expected: 'ERROR: Failure to remove workflows for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage07', Actual: msg.cErrorUnloadPluginMessage07, Expected: 'ERROR: Failure to remove theme data for the plugin: '},
  {Name: 'cErrorUnloadPluginMessage08', Actual: msg.cErrorUnloadPluginMessage08, Expected: 'ERROR: Failure to remove constants validation data for the plugin: '},
  {Name: 'cremovePluginBusinessRulesMessage01', Actual: msg.cremovePluginBusinessRulesMessage01, Expected: 'ERROR: Constants validation data for the specified plugin was not found. Plugin: '},
  {Name: 'cremovePluginBusinessRulesMessage02', Actual: msg.cremovePluginBusinessRulesMessage02, Expected: 'Removing plugin business rule: '},
  {Name: 'cremovePluginBusinessRulesMessage03', Actual: msg.cremovePluginBusinessRulesMessage03, Expected: 'ERROR: Failure attempting to delete the plugin business rules for plugin: '},
  {Name: 'cremovePluginBusinessRulesMessage04', Actual: msg.cremovePluginBusinessRulesMessage04, Expected: 'ERROR: Plugin business rule constants validation data for the specified plugin was not found. Plugin: '},
  {Name: 'cremovePluginCommandsMessage01', Actual: msg.cremovePluginCommandsMessage01, Expected: 'Removing plugin command: '},
  {Name: 'cremovePluginCommandsMessage02', Actual: msg.cremovePluginCommandsMessage02, Expected: 'ERROR: Failure attempting to delete the plugin commands for plugin: '},
  {Name: 'cremovePluginCommandsMessage03', Actual: msg.cremovePluginCommandsMessage03, Expected: 'ERROR: Plugin command constants validation data for the specified plugin was not found. Plugin: '},
  {Name: 'cremovePluginConfigurationDataMessage01', Actual: msg.cremovePluginConfigurationDataMessage01, Expected: 'ERROR: Unable to remove the plugin configuration data for the specified plugin: '},
  {Name: 'cremovePluginConfigurationDataMessage02', Actual: msg.cremovePluginConfigurationDataMessage02, Expected: 'ERROR: Unable to locate the plugins configuration data. Plugin: '},
  {Name: 'cremovePluginConfigurationDataMessage03', Actual: msg.cremovePluginConfigurationDataMessage03, Expected: 'ERROR: Unable to locate the plugins configuration debug settings data. Plugin: '},
  {Name: 'cremovePluginCommandAliasesMessage01', Actual: msg.cremovePluginCommandAliasesMessage01, Expected: 'ERROR: Unable to remove the plugin command aliases for the specified plugin: '},
  {Name: 'cremovePluginCommandAliasesMessage02', Actual: msg.cremovePluginCommandAliasesMessage02, Expected: 'ERROR: Unable to locate the plugins command aliases data. Plugin: '},
  {Name: 'cremovePluginWorkflowsMessage01', Actual: msg.cremovePluginWorkflowsMessage01, Expected: 'ERROR: Unable to remove the plugin workflows for the specified plugin: '},
  {Name: 'cremovePluginWorkflowsMessage02', Actual: msg.cremovePluginWorkflowsMessage02, Expected: 'ERROR: Unable to locate the plugins workflow data. Plugin: '},
  {Name: 'cremovePluginThemesMessage01', Actual: msg.cremovePluginThemesMessage01, Expected: 'ERROR: Unable to remove the plugin themes for the specified plugin: '},
  {Name: 'cremovePluginThemesMessage02', Actual: msg.cremovePluginThemesMessage02, Expected: 'ERROR: Unable to locate the plugins themes data. Plugin: '},
  {Name: 'cremovePluginConstantsValidationDataMessage01', Actual: msg.cremovePluginConstantsValidationDataMessage01, Expected: 'ERROR: Unable to remove the plugin constants validation data for the specified plugin: '},
  {Name: 'cremovePluginConstantsValidationDataMessage02', Actual: msg.cremovePluginConstantsValidationDataMessage02, Expected: 'ERROR: Unable to locate the plugins constants validation data. Plugin: '},
  {Name: 'cErrorUnloadPluginsMessage01', Actual: msg.cErrorUnloadPluginsMessage01, Expected: 'ERROR: No plugin name specified: '},
  {Name: 'cunloadPluginMessage01', Actual: msg.cunloadPluginMessage01, Expected: 'pluginsLoadedList is an array and length greater than or equal to 1'},
  {Name: 'cErrorListAllLoadedPluginsMessage01', Actual: msg.cErrorListAllLoadedPluginsMessage01, Expected: 'ERROR: There was an error getting the list of loaded plugins.'},
  {Name: 'cErrorUnregisterPluginsCommandMessage01', Actual: msg.cErrorUnregisterPluginsCommandMessage01, Expected: 'ERROR: Failure to unregister any of the specified plugins, invalid input: '},
  {Name: 'cErrorUnregisterPluginsMessage01', Actual: msg.cErrorUnregisterPluginsMessage01, Expected: 'ERROR: The plugin name was not a valid name: '},
  {Name: 'cErrorGetPluginsRegistryPathMessage01', Actual: msg.cErrorGetPluginsRegistryPathMessage01, Expected: 'ERROR: There is no defined plugin registry.'},
  {Name: 'cpluginsRegistryPathMessageIs', Actual: msg.cpluginsRegistryPathMessageIs, Expected: 'plugins registry path is: '},
  {Name: 'cErrorRegisterPluginMessage02', Actual: msg.cErrorRegisterPluginMessage02, Expected: 'ERROR: The specified plugin is already registered. Plugin name: '},
  {Name: 'cErrorRegisterPluginMessage03', Actual: msg.cErrorRegisterPluginMessage03, Expected: 'ERROR: Plugin Name is an invalid value: '},
  {Name: 'cErrorRegisterPluginMessage04', Actual: msg.cErrorRegisterPluginMessage04, Expected: 'ERROR: Plugin Path is an invalid value: '},
  {Name: 'cErrorCountMatchingCommandAliasMessage01', Actual: msg.cErrorCountMatchingCommandAliasMessage01, Expected: 'ERROR: A command is missing command aliases definitions. Data: '},
  {Name: 'cloadPluginErrorMessage01', Actual: msg.cloadPluginErrorMessage01, Expected: 'ERROR: There was an error attempting to load the specified plugin: '},
  {Name: 'cErrorNoDataAvailableForReading', Actual: msg.cErrorNoDataAvailableForReading, Expected: 'ERROR: No data available for reading, error message: '},
  {Name: 'cErrorLoadingPlugin', Actual: msg.cErrorLoadingPlugin, Expected: 'ERROR: There was an error attempting to load the plugin: '},
  {Name: 'cpluginLoadConfigDataMessage', Actual: msg.cpluginLoadConfigDataMessage, Expected: 'Done loading the Haystacks dependency data, now try and use Haystacks to load the config data, from the configPath.'},
  {Name: 'cprintUserCommandLogMessage01', Actual: msg.cprintUserCommandLogMessage01, Expected: 'NOTE: The user entered command log setting is not enabled.'},
  {Name: 'cprintUserCommandLogMessage02', Actual: msg.cprintUserCommandLogMessage02, Expected: 'Change the setting logUserEnteredCommands to enable user entered command log data to be captured for printing.'},
  {Name: 'cprintAllCommandLogMessage01', Actual: msg.cprintAllCommandLogMessage01, Expected: 'NOTE: The command log setting is not enabled.'},
  {Name: 'cprintAllCommandLogMessage02', Actual: msg.cprintAllCommandLogMessage02, Expected: 'Change the setting logAllCommands to enable command log data to be captured for printing.'},
  {Name: 'cUserCommandsLogIsEmpty', Actual: msg.cUserCommandsLogIsEmpty, Expected: 'User commands log is empty.'},
  {Name: 'cAllCommandsLogIsEmpty', Actual: msg.cAllCommandsLogIsEmpty, Expected: 'All commands log is empty.'},
  {Name: 'cclearUserCommandsLogMessage01', Actual: msg.cclearUserCommandsLogMessage01, Expected: 'NOTE: User commands log clearing setting is not enabled.'},
  {Name: 'cclearAllCommandsLogMessage01', Actual: msg.cclearAllCommandsLogMessage01, Expected: 'NOTE: All commands log clearing setting is not enabled.'},
  {Name: 'cErrorObjectDeepCloneMessage01', Actual: msg.cErrorObjectDeepCloneMessage01, Expected: 'Invalid input object. Expected a valid JSON object. Object type is: '},
  {Name: 'cdCommandStackBeforeLoadingIs', Actual: msg.cdCommandStackBeforeLoadingIs, Expected: 'D-command stack before loading is: '},
  {Name: 'cdBusinessRulesStackBeforeLoadingIs', Actual: msg.cdBusinessRulesStackBeforeLoadingIs, Expected: 'D-businessRules stack before loading is: '},
  {Name: 'cdCommandCloneStackBeforeLoadingIs', Actual: msg.cdCommandCloneStackBeforeLoadingIs, Expected: 'dCommandClone stack before loading is: '},
  {Name: 'cdBusinessRulesCloneStackBeforeLoadingIs', Actual: msg.cdBusinessRulesCloneStackBeforeLoadingIs, Expected: 'dBusinessRulesClone stack before loading is: '},
  {Name: 'cdCommandCloneStackAfterLoadingIs', Actual: msg.cdCommandCloneStackAfterLoadingIs, Expected: 'dCommandClone stack after loading is: '},
  {Name: 'cdBusinessRulesCloneStackAfterLoadingIs', Actual: msg.cdBusinessRulesCloneStackAfterLoadingIs, Expected: 'dBusinessRulesClone stack after loading is: '},
  {Name: 'cdCommandStackAfterLoadingIs', Actual: msg.cdCommandStackAfterLoadingIs, Expected: 'D-command stack after loading is: '},
  {Name: 'cdBusinessRulesStackAfterLoadingIs', Actual: msg.cdBusinessRulesStackAfterLoadingIs, Expected: 'D-businessRules stack after loading is: '},
  {Name: 'cdCommandStackAfterOverWriteIs', Actual: msg.cdCommandStackAfterOverWriteIs, Expected: 'D-command stack after over-write is: '},
  {Name: 'cdBusinessRulesStackAfterOverWriteIs', Actual: msg.cdBusinessRulesStackAfterOverWriteIs, Expected: 'D-businessRules stack after over-write is: '},
  {Name: 'cdCommandStackIs', Actual: msg.cdCommandStackIs, Expected: 'D-command stack is: '},
  {Name: 'cdCommandStackBeforeMergeIs', Actual: msg.cdCommandStackBeforeMergeIs, Expected: 'D-command stack before merge is: '},
  {Name: 'cdCommandStackAfterMergeIs', Actual: msg.cdCommandStackAfterMergeIs, Expected: 'D-command stack after merge is: '},
  {Name: 'cdBusinessRulesStackIs', Actual: msg.cdBusinessRulesStackIs, Expected: 'D-businessRules stack is: '},
  {Name: 'cdBusinessRulesStackBeforeMergeIs', Actual: msg.cdBusinessRulesStackBeforeMergeIs, Expected: 'D-businessRules stack before merge is: '},
  {Name: 'cdBusinessRulesStackAfterMergeIs', Actual: msg.cdBusinessRulesStackAfterMergeIs, Expected: 'D-businessRules stack after merge is: '},
  {Name: 'cErrorSetDataMessage01', Actual: msg.cErrorSetDataMessage01, Expected: 'ERROR: Unable to clone data and re-assign it to the D-data structure.'},
  {Name: 'cfastExitEnabled', Actual: msg.cfastExitEnabled, Expected: 'fast exit enabled'},
  {Name: 'carrayCloningObject', Actual: msg.carrayCloningObject, Expected: 'array cloning object'},
  {Name: 'carrayDeepCloneString', Actual: msg.carrayDeepCloneString, Expected: 'array deep clone string'},
  {Name: 'cobjectDeepCloning', Actual: msg.cobjectDeepCloning, Expected: 'object deep cloning'},
  {Name: 'cshiftData1', Actual: msg.cshiftData1, Expected: 'shift the data1!'},
  {Name: 'cshiftData2', Actual: msg.cshiftData2, Expected: 'shift the data2!'},
  {Name: 'cWarningUserEnteredConstantsValidationDataTypeMessage01', Actual: msg.cWarningUserEnteredConstantsValidationDataTypeMessage01, Expected: 'WARNING: The specified validation type is not available, please enter a valid type and try again. Type not recognized: '},
  {Name: 'cWarningUserEnteredConstantsValidationDataTypeMessage02', Actual: msg.cWarningUserEnteredConstantsValidationDataTypeMessage02, Expected: 'Constants validation types are: '},
  {Name: 'cWarningUserEnteredConstantsValidationDataTypeMessage03', Actual: msg.cWarningUserEnteredConstantsValidationDataTypeMessage03, Expected: 'WARNING: No valid constants validation types were entered.'},
  {Name: 'cWarningUserEnteredCommandAliasesValidationDataTypeMessage02', Actual: msg.cWarningUserEnteredCommandAliasesValidationDataTypeMessage02, Expected: 'Command Aliases validation types are: '},
  {Name: 'cWarningUserEnteredCommandAliasesValidationDataTypeMessage03', Actual: msg.cWarningUserEnteredCommandAliasesValidationDataTypeMessage03, Expected: 'WARNING: No valid command aliases validation types were entered.'},
  {Name: 'cWarningUserEnteredWorkflowsValidationDataTypeMessage02', Actual: msg.cWarningUserEnteredWorkflowsValidationDataTypeMessage02, Expected: 'Workflows validation types are: '},
  {Name: 'cWarningUserEnteredWorkflowsValidationDataTypeMessage03', Actual: msg.cWarningUserEnteredWorkflowsValidationDataTypeMessage03, Expected: 'WARNING: No valid workflow validation types were entered.'},
  {Name: 'cErrorGetDirectoryListMessage01', Actual: msg.cErrorGetDirectoryListMessage01, Expected: 'ERROR: The specified path does not exist or cannot be found: '},
  {Name: 'cWarningUserEnteredValidationDateTypeMessage02', Actual: msg.cWarningUserEnteredValidationDateTypeMessage02, Expected: 'Validation types are: '},
  {Name: 'cWarningUserEnteredValidationDataTypeMessage03', Actual: msg.cWarningUserEnteredValidationDataTypeMessage03, Expected: 'WARNING: No valid validation types were entered.'},
  {Name: 'cBeginCommandAliasesValidationMessage', Actual: msg.cBeginCommandAliasesValidationMessage, Expected: 'Begin command aliases validation'},
  {Name: 'cBeginWorkflowsValidationMessage', Actual: msg.cBeginWorkflowsValidationMessage, Expected: 'Begin workflows validation'},
  {Name: 'cRunningAllValidationsMessage', Actual: msg.cRunningAllValidationsMessage, Expected: 'Running all validations'},
  {Name: 'cErrorInitFrameworkMessage01', Actual: msg.cErrorInitFrameworkMessage01, Expected: 'ERROR: There was a fatal error in warden.initFrameworkSchema function.'},
  {Name: 'cErrorInitFrameworkMessage02', Actual: msg.cErrorInitFrameworkMessage02, Expected: 'ERROR: There was a fatal error in main.initFramework function.'},
  {Name: 'cErrorInitFrameworkMessage03', Actual: msg.cErrorInitFrameworkMessage03, Expected: 'ERROR: clientConfiguration was not properly defined.'},
  {Name: 'cErrorAccouterFrameworkMessage01', Actual: msg.cErrorAccouterFrameworkMessage01, Expected: 'ERROR: Input data was not properly defined.'},
  {Name: 'cErrorMergeClientBusinessRulesMessage01', Actual: msg.cErrorMergeClientBusinessRulesMessage01, Expected: 'ERROR: clientBusinessRules was not properly defined.'},
  {Name: 'cErrorMergeClientCommandsMessage01', Actual: msg.cErrorMergeClientCommandsMessage01, Expected: 'ERROR: clientCommands was not properly defined.'},
  {Name: 'cErrorLoadCommandAliasesMessage01', Actual: msg.cErrorLoadCommandAliasesMessage01, Expected: 'ERROR: commandAliasesPath was not properly defined.'},
  {Name: 'cErrorLoadCommandAliasesMessage02', Actual: msg.cErrorLoadCommandAliasesMessage02, Expected: 'ERROR: contextName was not properly defined.'},
  {Name: 'cErrorListAllLoadedPluginsMessage02', Actual: msg.cErrorListAllLoadedPluginsMessage02, Expected: 'ERROR: Plugin list does not exist or is not an array.'},
  {Name: 'cErrorAttributeNameMessage01', Actual: msg.cErrorAttributeNameMessage01, Expected: 'ERROR: attributeName was not properly defined.'},
  {Name: 'cErrorRegisterPluginMessage05', Actual: msg.cErrorRegisterPluginMessage05, Expected: 'ERROR: The plugin does not exist in the plugin path. Plugin name: '},
  {Name: 'cErrorRegisterPluginMessage06', Actual: msg.cErrorRegisterPluginMessage06, Expected: 'ERROR: There are no plugins in the plugin path. Plugin path: '},
  {Name: 'cErrorUnRegisterPluginMessage02', Actual: msg.cErrorUnRegisterPluginMessage02, Expected: 'ERROR: Plugin Name does not exist. Plugin Name: '},
  {Name: 'cErrorUnRegisterPluginMessage03', Actual: msg.cErrorUnRegisterPluginMessage03, Expected: 'ERROR: Plugin Name is an invalid value: '},
  {Name: 'cErrorDeleteFileMessage01', Actual: msg.cErrorDeleteFileMessage01, Expected: 'ERROR: No file specified, cannot delete nothing.'},
  {Name: 'cErrorDeleteFileMessage02', Actual: msg.cErrorDeleteFileMessage02, Expected: 'ERROR: There was an error attempting to delete the file: '},
  {Name: 'cErrorUnregisterPluginsMessage02', Actual: msg.cErrorUnregisterPluginsMessage02, Expected: 'ERROR: Plugin List Array is an invalid value: '},
  {Name: 'cErrorSavePluginRegistryMessage02', Actual: msg.cErrorSavePluginRegistryMessage02, Expected: 'ERROR: pluginRegistry is an invalid value: '},
  {Name: 'cErrorUnloadPluginMessage09', Actual: msg.cErrorUnloadPluginMessage09, Expected: 'ERROR: Plugin Name is an invalid value, pluginName is: '},
  {Name: 'cErrorUnloadPluginMessage10', Actual: msg.cErrorUnloadPluginMessage10, Expected: 'ERROR: Plugin Name was not found in plugins loaded, pluginName is: '},
  {Name: 'cErrorLoadPluginMetaDataMessage01', Actual: msg.cErrorLoadPluginMetaDataMessage01, Expected: 'ERROR: prefixPluginPath is an undefined string.'},
  {Name: 'cErrorLoadAllJsonDataMessage01', Actual: msg.cErrorLoadAllJsonDataMessage01, Expected: 'ERROR: Invalid input for contextName: '},
  {Name: 'cErrorLoadAllJsonDataMessage02', Actual: msg.cErrorLoadAllJsonDataMessage02, Expected: 'ERROR: Invalid input for dataPath: '},
  {Name: 'cErrorStoreDataMessage01', Actual: msg.cErrorStoreDataMessage01, Expected: 'ERROR: Given data name already exists. Data context name is: '},
  {Name: 'cErrorStoreDataMessage02', Actual: msg.cErrorStoreDataMessage02, Expected: 'ERROR: Data to store is undefined.'},
  {Name: 'cErrorStoreDataMessage03', Actual: msg.cErrorStoreDataMessage03, Expected: 'ERROR: Data name is an invalid value. Data name is: '},


  // Coded System Messages
  // EXAMPLE:
  // '!mergedData[wrd.csystem] && !D[wrd.csystem] === true'
  {Name: 'cgetRuleMessage01', Actual: msg.cgetRuleMessage01, Expected: 'D[sys.cbusinessRules][inputData] is: '}
];
